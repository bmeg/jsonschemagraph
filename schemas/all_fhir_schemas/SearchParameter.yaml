$id: SearchParameter
additionalProperties: false
description: Search parameter for a resource. A search parameter that defines a named
  search item that can be used to search/filter on a resource. [See https://hl7.org/fhir/R5/SearchParameter.html]
links:
- href: PlanDefinition/{id}
  rel: useContext_valueReference_PlanDefinition
  targetHints:
    backref:
    - usage_context
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: PlanDefinition.yaml
  templatePointers:
    id: /useContext/-/valueReference/reference
  templateRequired:
  - id
- href: ResearchStudy/{id}
  rel: useContext_valueReference_ResearchStudy
  targetHints:
    backref:
    - usage_context
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: ResearchStudy.yaml
  templatePointers:
    id: /useContext/-/valueReference/reference
  templateRequired:
  - id
- href: InsurancePlan/{id}
  rel: useContext_valueReference_InsurancePlan
  targetHints:
    backref:
    - usage_context
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: InsurancePlan.yaml
  templatePointers:
    id: /useContext/-/valueReference/reference
  templateRequired:
  - id
- href: HealthcareService/{id}
  rel: useContext_valueReference_HealthcareService
  targetHints:
    backref:
    - usage_context
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: HealthcareService.yaml
  templatePointers:
    id: /useContext/-/valueReference/reference
  templateRequired:
  - id
- href: Group/{id}
  rel: useContext_valueReference_Group
  targetHints:
    backref:
    - usage_context
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Group.yaml
  templatePointers:
    id: /useContext/-/valueReference/reference
  templateRequired:
  - id
- href: Location/{id}
  rel: useContext_valueReference_Location
  targetHints:
    backref:
    - usage_context
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Location.yaml
  templatePointers:
    id: /useContext/-/valueReference/reference
  templateRequired:
  - id
- href: Organization/{id}
  rel: useContext_valueReference_Organization
  targetHints:
    backref:
    - usage_context
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Organization.yaml
  templatePointers:
    id: /useContext/-/valueReference/reference
  templateRequired:
  - id
properties:
  _base:
    items:
      $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``base``.
    type: array
  _chain:
    items:
      $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``chain``.
    type: array
  _code:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``code``.
  _comparator:
    items:
      $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``comparator``.
    type: array
  _constraint:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``constraint``.
  _copyright:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``copyright``.
  _copyrightLabel:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``copyrightLabel``.
  _date:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``date``.
  _derivedFrom:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``derivedFrom``.
  _description:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``description``.
  _experimental:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``experimental``.
  _expression:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``expression``.
  _implicitRules:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``implicitRules``.
  _language:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``language``.
  _modifier:
    items:
      $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``modifier``.
    type: array
  _multipleAnd:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``multipleAnd``.
  _multipleOr:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``multipleOr``.
  _name:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``name``.
  _processingMode:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``processingMode``.
  _publisher:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``publisher``.
  _purpose:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``purpose``.
  _status:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``status``.
  _target:
    items:
      $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``target``.
    type: array
  _title:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``title``.
  _type:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``type``.
  _url:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``url``.
  _version:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``version``.
  _versionAlgorithmString:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``versionAlgorithmString``.
  base:
    binding_description: A type of resource, or a Reference (from all versions)
    binding_strength: required
    binding_uri: http://hl7.org/fhir/ValueSet/version-independent-all-resource-types
    binding_version: 5.0.0
    description: The base resource type(s) that this search parameter can be used
      against.
    element_property: true
    element_required: true
    items:
      pattern: ^[^\s]+(\s[^\s]+)*$
      type: string
    title: The resource type(s) this search parameter applies to
    type: array
  chain:
    description: Contains the names of any search parameters which may be chained
      to the containing search parameter. Chained parameters may be added to search
      parameters of type reference and specify that resources will only be returned
      if they contain a reference to a resource which matches the chained parameter
      value. Values for this field should be drawn from SearchParameter.code for a
      parameter on the target resource type.
    element_property: true
    items:
      pattern: '[ \r\n\t\S]+'
      type: string
    title: Chained names supported
    type: array
  code:
    description: The label that is recommended to be used in the URL or the parameter
      name in a parameters resource for this search parameter.  In some cases, servers
      may need to use a different CapabilityStatement searchParam.name to differentiate
      between multiple SearchParameters that happen to have the same code.
    element_property: true
    element_required: true
    pattern: ^[^\s]+(\s[^\s]+)*$
    title: Recommended name for parameter in search url
    type: string
  comparator:
    binding_description: What Search Comparator Codes are supported in search.
    binding_strength: required
    binding_uri: http://hl7.org/fhir/ValueSet/search-comparator
    binding_version: 5.0.0
    description: Comparators supported for the search parameter.
    element_property: true
    enum_values:
    - eq
    - ne
    - gt
    - lt
    - ge
    - le
    - sa
    - eb
    - ap
    items:
      pattern: ^[^\s]+(\s[^\s]+)*$
      type: string
    title: eq | ne | gt | lt | ge | le | sa | eb | ap
    type: array
  component:
    description: Used to define the parts of a composite search parameter.
    element_property: true
    items:
      $ref: SearchParameterComponent.yaml
    title: For Composite resources to define the parts
    type: array
  constraint:
    description: FHIRPath expression that defines/sets a complex constraint for when
      this SearchParameter is applicable.
    element_property: true
    pattern: '[ \r\n\t\S]+'
    title: FHIRPath expression that constraints the usage of this SearchParamete
    type: string
  contact:
    description: Contact details to assist a user in finding and communicating with
      the publisher.
    element_property: true
    items:
      $ref: ContactDetail.yaml
    title: Contact details for the publisher
    type: array
  contained:
    description: These resources do not have an independent existence apart from the
      resource that contains them - they cannot be identified independently, nor can
      they have their own independent transaction scope. This is allowed to be a Parameters
      resource if and only if it is referenced by a resource that provides context/meaning.
    element_property: true
    items:
      $ref: Resource.yaml
    title: Contained, inline Resources
    type: array
  copyright:
    description: A copyright statement relating to the search parameter and/or its
      contents. Copyright statements are generally legal restrictions on the use and
      publishing of the search parameter.
    element_property: true
    pattern: \s*(\S|\s)*
    title: Use and/or publishing restrictions
    type: string
  copyrightLabel:
    description: A short string (<50 characters), suitable for inclusion in a page
      footer that identifies the copyright holder, effective period, and optionally
      whether rights are resctricted. (e.g. 'All rights reserved', 'Some rights reserved').
    element_property: true
    pattern: '[ \r\n\t\S]+'
    title: Copyright holder and year(s)
    type: string
  date:
    description: The date  (and optionally time) when the search parameter was last
      significantly changed. The date must change when the business version changes
      and it must change if the status code changes. In addition, it should change
      when the substantive content of the search parameter changes.
    element_property: true
    format: date-time
    title: Date last changed
    type: string
  derivedFrom:
    description: Where this search parameter is originally defined. If a derivedFrom
      is provided, then the details in the search parameter must be consistent with
      the definition from which it is defined. i.e. the parameter should have the
      same meaning, and (usually) the functionality should be a proper subset of the
      underlying search parameter.
    element_property: true
    enum_reference_types:
    - SearchParameter
    pattern: \S*
    title: Original definition for the search parameter
    type: string
  description:
    description: And how it used.
    element_property: true
    element_required: true
    pattern: \s*(\S|\s)*
    title: Natural language description of the search parameter
    type: string
  experimental:
    description: A Boolean value to indicate that this search parameter is authored
      for testing purposes (or education/evaluation/marketing) and is not intended
      to be used for genuine usage.
    element_property: true
    title: For testing purposes, not real usage
    type: boolean
  expression:
    description: A FHIRPath expression that returns a set of elements for the search
      parameter.
    element_property: true
    pattern: '[ \r\n\t\S]+'
    title: FHIRPath expression that extracts the values
    type: string
  extension:
    description: May be used to represent additional information that is not part
      of the basic definition of the resource. To make the use of extensions safe
      and managable, there is a strict set of governance applied to the definition
      and use of extensions. Though any implementer can define an extension, there
      is a set of requirements that SHALL be met as part of the definition of the
      extension.
    element_property: true
    items:
      $ref: Extension.yaml
    title: Additional content defined by implementations
    type: array
  fhir_comments:
    anyOf:
    - type: string
    - items:
        type: string
      type: array
    element_property: false
    title: Fhir Comments
  id:
    description: The logical id of the resource, as used in the URL for the resource.
      Once assigned, this value never changes.
    element_property: true
    maxLength: 64
    minLength: 1
    pattern: ^[A-Za-z0-9\-.]+$
    title: Logical id of this artifact
    type: string
  identifier:
    description: A formal identifier that is used to identify this search parameter
      when it is represented in other formats, or referenced in a specification, model,
      design or an instance.
    element_property: true
    items:
      $ref: Identifier.yaml
    title: Additional identifier for the search parameter (business identifier)
    type: array
  implicitRules:
    description: A reference to a set of rules that were followed when the resource
      was constructed, and which must be understood when processing the content. Often,
      this is a reference to an implementation guide that defines the special rules
      along with other profiles etc.
    element_property: true
    pattern: \S*
    title: A set of rules under which this content was created
    type: string
  jurisdiction:
    binding_description: Countries and regions within which this artifact is targeted
      for use.
    binding_strength: extensible
    binding_uri: http://hl7.org/fhir/ValueSet/jurisdiction
    binding_version: null
    description: A legal or geographic region in which the search parameter is intended
      to be used.
    element_property: true
    items:
      $ref: CodeableConcept.yaml
    title: Intended jurisdiction for search parameter (if applicable)
    type: array
  language:
    binding_description: IETF language tag for a human language
    binding_strength: required
    binding_uri: http://hl7.org/fhir/ValueSet/all-languages
    binding_version: 5.0.0
    description: The base language in which the resource is written.
    element_property: true
    pattern: ^[^\s]+(\s[^\s]+)*$
    title: Language of the resource content
    type: string
  links:
    links:
      items:
        $ref: https://json-schema.org/draft/2020-12/links.yaml
      type: array
  meta:
    $ref: Meta.yaml
    description: The metadata about the resource. This is content that is maintained
      by the infrastructure. Changes to the content might not always be associated
      with version changes to the resource.
    element_property: true
    title: Metadata about the resource
  modifier:
    binding_description: A supported modifier for a search parameter.
    binding_strength: required
    binding_uri: http://hl7.org/fhir/ValueSet/search-modifier-code
    binding_version: 5.0.0
    description: A modifier supported for the search parameter.
    element_property: true
    enum_values:
    - missing
    - exact
    - contains
    - not
    - text
    - in
    - not-in
    - below
    - above
    - type
    - identifier
    - of-type
    - code-text
    - text-advanced
    - iterate
    items:
      pattern: ^[^\s]+(\s[^\s]+)*$
      type: string
    title: missing | exact | contains | not | text | in | not-in | below | above |
      type | identifier | of-type | code-text | text-advanced | iterate
    type: array
  modifierExtension:
    description: May be used to represent additional information that is not part
      of the basic definition of the resource and that modifies the understanding
      of the element that contains it and/or the understanding of the containing element's
      descendants. Usually modifier elements provide negation or qualification. To
      make the use of extensions safe and managable, there is a strict set of governance
      applied to the definition and use of extensions. Though any implementer is allowed
      to define an extension, there is a set of requirements that SHALL be met as
      part of the definition of the extension. Applications processing a resource
      are required to check for modifier extensions.  Modifier extensions SHALL NOT
      change the meaning of any elements on Resource or DomainResource (including
      cannot change the meaning of modifierExtension itself).
    element_property: true
    items:
      $ref: Extension.yaml
    title: Extensions that cannot be ignored
    type: array
  multipleAnd:
    description: Whether multiple parameters are allowed - e.g. more than one parameter
      with the same name. The search matches if all the parameters match.
    element_property: true
    title: Allow multiple parameters (and)
    type: boolean
  multipleOr:
    description: Whether multiple values are allowed for each time the parameter exists.
      Values are separated by commas, and the parameter matches if any of the values
      match.
    element_property: true
    title: Allow multiple values per parameter (or)
    type: boolean
  name:
    description: A natural language name identifying the search parameter. This name
      should be usable as an identifier for the module by machine processing applications
      such as code generation.
    element_property: true
    element_required: true
    pattern: '[ \r\n\t\S]+'
    title: Name for this search parameter (computer friendly)
    type: string
  processingMode:
    binding_description: How a search parameter relates to the set of elements returned
      by evaluating its expression query.
    binding_strength: required
    binding_uri: http://hl7.org/fhir/ValueSet/search-processingmode
    binding_version: 5.0.0
    description: How the search parameter relates to the set of elements returned
      by evaluating the expression query.
    element_property: true
    enum_values:
    - normal
    - phonetic
    - other
    pattern: ^[^\s]+(\s[^\s]+)*$
    title: normal | phonetic | other
    type: string
  publisher:
    description: The name of the organization or individual tresponsible for the release
      and ongoing maintenance of the search parameter.
    element_property: true
    pattern: '[ \r\n\t\S]+'
    title: Name of the publisher/steward (organization or individual)
    type: string
  purpose:
    description: Explanation of why this search parameter is needed and why it has
      been designed as it has.
    element_property: true
    pattern: \s*(\S|\s)*
    title: Why this search parameter is defined
    type: string
  resourceType:
    const: SearchParameter
    default: SearchParameter
    description: One of the resource types defined as part of FHIR
    title: Resource Type
    type: string
  status:
    binding_description: The lifecycle status of an artifact.
    binding_strength: required
    binding_uri: http://hl7.org/fhir/ValueSet/publication-status
    binding_version: 5.0.0
    description: The status of this search parameter. Enables tracking the life-cycle
      of the content.
    element_property: true
    element_required: true
    enum_values:
    - draft
    - active
    - retired
    - unknown
    pattern: ^[^\s]+(\s[^\s]+)*$
    title: draft | active | retired | unknown
    type: string
  target:
    binding_description: A type of resource, or a Reference (from all versions)
    binding_strength: required
    binding_uri: http://hl7.org/fhir/ValueSet/version-independent-all-resource-types
    binding_version: 5.0.0
    description: Types of resource (if a resource is referenced).
    element_property: true
    items:
      pattern: ^[^\s]+(\s[^\s]+)*$
      type: string
    title: Types of resource (if a resource reference)
    type: array
  text:
    $ref: Narrative.yaml
    description: A human-readable narrative that contains a summary of the resource
      and can be used to represent the content of the resource to a human. The narrative
      need not encode all the structured data, but is required to contain sufficient
      detail to make it "clinically safe" for a human to just read the narrative.
      Resource definitions may define what content should be represented in the narrative
      to ensure clinical safety.
    element_property: true
    title: Text summary of the resource, for human interpretation
  title:
    description: A short, descriptive, user-friendly title for the search parameter.
    element_property: true
    pattern: '[ \r\n\t\S]+'
    title: Name for this search parameter (human friendly)
    type: string
  type:
    binding_description: Data types allowed to be used for search parameters.
    binding_strength: required
    binding_uri: http://hl7.org/fhir/ValueSet/search-param-type
    binding_version: 5.0.0
    description: The type of value that a search parameter may contain, and how the
      content is interpreted.
    element_property: true
    element_required: true
    enum_values:
    - number
    - date
    - string
    - token
    - reference
    - composite
    - quantity
    - uri
    - special
    pattern: ^[^\s]+(\s[^\s]+)*$
    title: number | date | string | token | reference | composite | quantity | uri
      | special
    type: string
  url:
    description: An absolute URI that is used to identify this search parameter when
      it is referenced in a specification, model, design or an instance; also called
      its canonical identifier. This SHOULD be globally unique and SHOULD be a literal
      address at which an authoritative instance of this search parameter is (or will
      be) published. This URL can be the target of a canonical reference. It SHALL
      remain the same when the search parameter is stored on different servers.
    element_property: true
    element_required: true
    pattern: \S*
    title: Canonical identifier for this search parameter, represented as a URI (globally
      unique)
    type: string
  useContext:
    description: The content was developed with a focus and intent of supporting the
      contexts that are listed. These contexts may be general categories (gender,
      age, ...) or may be references to specific programs (insurance plans, studies,
      ...) and may be used to assist with indexing and searching for appropriate search
      parameter instances.
    element_property: true
    items:
      $ref: UsageContext.yaml
    title: The context that the content is intended to support
    type: array
  version:
    description: The identifier that is used to identify this version of the search
      parameter when it is referenced in a specification, model, design or instance.
      This is an arbitrary value managed by the search parameter author and is not
      expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd)
      if a managed version is not available. There is also no expectation that versions
      can be placed in a lexicographical sequence.
    element_property: true
    pattern: '[ \r\n\t\S]+'
    title: Business version of the search parameter
    type: string
  versionAlgorithmCoding:
    $ref: Coding.yaml
    description: Indicates the mechanism used to compare versions to determine which
      is more current.
    element_property: true
    one_of_many: versionAlgorithm
    one_of_many_required: false
    title: How to compare versions
  versionAlgorithmString:
    description: Indicates the mechanism used to compare versions to determine which
      is more current.
    element_property: true
    one_of_many: versionAlgorithm
    one_of_many_required: false
    pattern: '[ \r\n\t\S]+'
    title: How to compare versions
    type: string
title: SearchParameter
type: object

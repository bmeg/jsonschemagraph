$id: PackagedProductDefinitionPackaging
additionalProperties: false
description: A packaging item, as a container for medically related items, possibly
  with other packaging items within, or a packaging component, such as bottle cap.
  A packaging item, as a container for medically related items, possibly with other
  packaging items within, or a packaging component, such as bottle cap (which is not
  a device or a medication manufactured item). [See https://hl7.org/fhir/R5/PackagedProductDefinitionPackaging.html]
  [See https://hl7.org/fhir/R5/PackagedProductDefinitionPackaging.html] [See https://hl7.org/fhir/R5/PackagedProductDefinitionPackaging.html]
links:
- href: Organization/{id}
  rel: manufacturer
  targetHints:
    backref:
    - manufacturer_packaged_product_definition_packaging
    direction:
    - outbound
    multiplicity:
    - has_many
  targetSchema:
    $ref: Organization.yaml
  templatePointers:
    id: /manufacturer/-/reference
  templateRequired:
  - id
- href: Organization/{id}
  rel: packaging_manufacturer
  targetHints:
    backref:
    - manufacturer_packaged_product_definition_packaging
    direction:
    - outbound
    multiplicity:
    - has_many
  targetSchema:
    $ref: Organization.yaml
  templatePointers:
    id: /packaging/-/manufacturer/-/reference
  templateRequired:
  - id
properties:
  _componentPart:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``componentPart``.
  _quantity:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``quantity``.
  alternateMaterial:
    binding_description: A material used in the construction of packages and their
      components.
    binding_strength: example
    binding_uri: http://hl7.org/fhir/ValueSet/package-material
    binding_version: null
    description: A possible alternate material for this part of the packaging, that
      is allowed to be used instead of the usual material (e.g. different types of
      plastic for a blister sleeve).
    element_property: true
    items:
      $ref: CodeableConcept.yaml
    title: A possible alternate material for this part of the packaging, that is allowed
      to be used instead of the usual material
    type: array
  componentPart:
    description: Is this a part of the packaging (e.g. a cap or bottle stopper), rather
      than the packaging itself (e.g. a bottle or vial). The latter type are designed
      be a container, but the former are not.
    element_property: true
    title: Is this a part of the packaging (e.g. a cap or bottle stopper), rather
      than the packaging itself (e.g. a bottle or vial)
    type: boolean
  containedItem:
    element_property: true
    items:
      $ref: PackagedProductDefinitionPackagingContainedItem.yaml
    title: The item(s) within the packaging
    type: array
  extension:
    description: May be used to represent additional information that is not part
      of the basic definition of the element. To make the use of extensions safe and
      managable, there is a strict set of governance applied to the definition and
      use of extensions. Though any implementer can define an extension, there is
      a set of requirements that SHALL be met as part of the definition of the extension.
    element_property: true
    items:
      $ref: Extension.yaml
    title: Additional content defined by implementations
    type: array
  fhir_comments:
    anyOf:
    - type: string
    - items:
        type: string
      type: array
    element_property: false
    title: Fhir Comments
  id:
    description: Unique id for the element within a resource (for internal references).
      This may be any string value that does not contain spaces.
    element_property: true
    pattern: '[ \r\n\t\S]+'
    title: Unique id for inter-element referencing
    type: string
  identifier:
    description: A business identifier that is specific to this particular part of
      the packaging, often assigned by the manufacturer. Including possibly Data Carrier
      Identifier (a GS1 barcode).
    element_property: true
    items:
      $ref: Identifier.yaml
    title: An identifier that is specific to this particular part of the packaging.
      Including possibly a Data Carrier Identifier
    type: array
  links:
    links:
      items:
        $ref: https://json-schema.org/draft/2020-12/links.yaml
      type: array
  manufacturer:
    backref: manufacturer_packaged_product_definition_packaging
    description: Manufacturer of this packaging item. When there are multiple values
      each one is a potential manufacturer of this packaging item.
    element_property: true
    enum_reference_types:
    - Organization
    items:
      $ref: Reference.yaml
    title: Manufacturer of this packaging item (multiple means these are all potential
      manufacturers)
    type: array
  material:
    binding_description: A material used in the construction of packages and their
      components.
    binding_strength: example
    binding_uri: http://hl7.org/fhir/ValueSet/package-material
    binding_version: null
    element_property: true
    items:
      $ref: CodeableConcept.yaml
    title: Material type of the package item
    type: array
  modifierExtension:
    description: May be used to represent additional information that is not part
      of the basic definition of the element and that modifies the understanding of
      the element in which it is contained and/or the understanding of the containing
      element's descendants. Usually modifier elements provide negation or qualification.
      To make the use of extensions safe and managable, there is a strict set of governance
      applied to the definition and use of extensions. Though any implementer can
      define an extension, there is a set of requirements that SHALL be met as part
      of the definition of the extension. Applications processing a resource are required
      to check for modifier extensions.  Modifier extensions SHALL NOT change the
      meaning of any elements on Resource or DomainResource (including cannot change
      the meaning of modifierExtension itself).
    element_property: true
    items:
      $ref: Extension.yaml
    title: Extensions that cannot be ignored even if unrecognized
    type: array
  packaging:
    description: Allows containers (and parts of containers) within containers, still
      as a part of a single packaged product. See also PackagedProductDefinition.packaging.containedItem.item(PackagedProductDefinition).
    element_property: true
    items:
      $ref: PackagedProductDefinitionPackaging.yaml
    title: Allows containers (and parts of containers) within containers, still as
      a part of single packaged product
    type: array
  property:
    element_property: true
    items:
      $ref: PackagedProductDefinitionPackagingProperty.yaml
    title: General characteristics of this item
    type: array
  quantity:
    description: The quantity of packaging items contained at this layer of the package.
      This does not relate to the number of contained items but relates solely to
      the number of packaging items. When looking at the outermost layer it is always
      1. If there are two boxes within, at the next layer it would be 2.
    element_property: true
    title: The quantity of this level of packaging in the package that contains it
      (with the outermost level being 1)
    type: integer
  resourceType:
    const: PackagedProductDefinitionPackaging
    default: PackagedProductDefinitionPackaging
    description: One of the resource types defined as part of FHIR
    title: Resource Type
    type: string
  shelfLifeStorage:
    element_property: true
    items:
      $ref: ProductShelfLife.yaml
    title: Shelf Life and storage information
    type: array
  type:
    $ref: CodeableConcept.yaml
    binding_description: A high level categorisation of a package.
    binding_strength: example
    binding_uri: http://hl7.org/fhir/ValueSet/packaging-type
    binding_version: null
    element_property: true
    title: The physical type of the container of the items
title: PackagedProductDefinitionPackaging
type: object

$id: MessageHeaderDestination
additionalProperties: false
description: Message destination application(s). The destination application which
  the message is intended for. [See https://hl7.org/fhir/R5/MessageHeaderDestination.html]
  [See https://hl7.org/fhir/R5/MessageHeaderDestination.html]
links:
- href: Endpoint/{id}
  rel: endpointReference
  targetHints:
    backref:
    - message_header_destination
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Endpoint.yaml
  templatePointers:
    id: /endpointReference/reference
  templateRequired:
  - id
- href: Practitioner/{id}
  rel: receiver_Practitioner
  targetHints:
    backref:
    - message_header_destination
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Practitioner.yaml
  templatePointers:
    id: /receiver/reference
  templateRequired:
  - id
- href: PractitionerRole/{id}
  rel: receiver_PractitionerRole
  targetHints:
    backref:
    - message_header_destination
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: PractitionerRole.yaml
  templatePointers:
    id: /receiver/reference
  templateRequired:
  - id
- href: Organization/{id}
  rel: receiver_Organization
  targetHints:
    backref:
    - message_header_destination
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Organization.yaml
  templatePointers:
    id: /receiver/reference
  templateRequired:
  - id
- href: Device/{id}
  rel: target
  targetHints:
    backref:
    - message_header_destination
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Device.yaml
  templatePointers:
    id: /target/reference
  templateRequired:
  - id
properties:
  _endpointUrl:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``endpointUrl``.
  _name:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``name``.
  endpointReference:
    $ref: Reference.yaml
    backref: message_header_destination
    description: Indicates where the message should be routed.
    element_property: true
    enum_reference_types:
    - Endpoint
    one_of_many: endpoint
    one_of_many_required: false
    title: Actual destination address or Endpoint resource
  endpointUrl:
    description: Indicates where the message should be routed.
    element_property: true
    format: uri
    maxLength: 65536
    minLength: 1
    one_of_many: endpoint
    one_of_many_required: false
    title: Actual destination address or Endpoint resource
    type: string
  extension:
    description: May be used to represent additional information that is not part
      of the basic definition of the element. To make the use of extensions safe and
      managable, there is a strict set of governance applied to the definition and
      use of extensions. Though any implementer can define an extension, there is
      a set of requirements that SHALL be met as part of the definition of the extension.
    element_property: true
    items:
      $ref: Extension.yaml
    title: Additional content defined by implementations
    type: array
  fhir_comments:
    anyOf:
    - type: string
    - items:
        type: string
      type: array
    element_property: false
    title: Fhir Comments
  id:
    description: Unique id for the element within a resource (for internal references).
      This may be any string value that does not contain spaces.
    element_property: true
    pattern: '[ \r\n\t\S]+'
    title: Unique id for inter-element referencing
    type: string
  links:
    links:
      items:
        $ref: https://json-schema.org/draft/2020-12/links.yaml
      type: array
  modifierExtension:
    description: May be used to represent additional information that is not part
      of the basic definition of the element and that modifies the understanding of
      the element in which it is contained and/or the understanding of the containing
      element's descendants. Usually modifier elements provide negation or qualification.
      To make the use of extensions safe and managable, there is a strict set of governance
      applied to the definition and use of extensions. Though any implementer can
      define an extension, there is a set of requirements that SHALL be met as part
      of the definition of the extension. Applications processing a resource are required
      to check for modifier extensions.  Modifier extensions SHALL NOT change the
      meaning of any elements on Resource or DomainResource (including cannot change
      the meaning of modifierExtension itself).
    element_property: true
    items:
      $ref: Extension.yaml
    title: Extensions that cannot be ignored even if unrecognized
    type: array
  name:
    description: Human-readable name for the target system.
    element_property: true
    pattern: '[ \r\n\t\S]+'
    title: Name of system
    type: string
  receiver:
    $ref: Reference.yaml
    backref: message_header_destination
    description: Allows data conveyed by a message to be addressed to a particular
      person or department when routing to a specific application isn't sufficient.
    element_property: true
    enum_reference_types:
    - Practitioner
    - PractitionerRole
    - Organization
    title: Intended "real-world" recipient for the data
  resourceType:
    const: MessageHeaderDestination
    default: MessageHeaderDestination
    description: One of the resource types defined as part of FHIR
    title: Resource Type
    type: string
  target:
    $ref: Reference.yaml
    backref: message_header_destination
    description: Identifies the target end system in situations where the initial
      message transmission is to an intermediary system.
    element_property: true
    enum_reference_types:
    - Device
    title: Particular delivery destination within the destination
title: MessageHeaderDestination
type: object

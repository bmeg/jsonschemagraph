$id: IngredientSubstance
additionalProperties: false
description: The substance that comprises this ingredient. [See https://hl7.org/fhir/R5/IngredientSubstance.html]
links:
- href: Reference/{id}
  rel: code_reference
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Reference.yaml
  templatePointers:
    id: /code/reference/reference
  templateRequired:
  - id
properties:
  code:
    $ref: CodeableReference.yaml
    backref: ingredient_substance
    binding_description: This value set includes all substance codes from SNOMED CT
      - provided as an exemplar value set.
    binding_strength: example
    binding_uri: http://hl7.org/fhir/ValueSet/substance-codes
    binding_version: null
    description: A code or full resource that represents the ingredient's substance.
    element_property: true
    enum_reference_types:
    - SubstanceDefinition
    title: A code or full resource that represents the ingredient substance
  extension:
    description: May be used to represent additional information that is not part
      of the basic definition of the element. To make the use of extensions safe and
      managable, there is a strict set of governance applied to the definition and
      use of extensions. Though any implementer can define an extension, there is
      a set of requirements that SHALL be met as part of the definition of the extension.
    element_property: true
    items:
      $ref: Extension.yaml
    title: Additional content defined by implementations
    type: array
  fhir_comments:
    anyOf:
    - type: string
    - items:
        type: string
      type: array
    element_property: false
    title: Fhir Comments
  id:
    description: Unique id for the element within a resource (for internal references).
      This may be any string value that does not contain spaces.
    element_property: true
    pattern: '[ \r\n\t\S]+'
    title: Unique id for inter-element referencing
    type: string
  links:
    links:
      items:
        $ref: https://json-schema.org/draft/2020-12/links.yaml
      type: array
  modifierExtension:
    description: May be used to represent additional information that is not part
      of the basic definition of the element and that modifies the understanding of
      the element in which it is contained and/or the understanding of the containing
      element's descendants. Usually modifier elements provide negation or qualification.
      To make the use of extensions safe and managable, there is a strict set of governance
      applied to the definition and use of extensions. Though any implementer can
      define an extension, there is a set of requirements that SHALL be met as part
      of the definition of the extension. Applications processing a resource are required
      to check for modifier extensions.  Modifier extensions SHALL NOT change the
      meaning of any elements on Resource or DomainResource (including cannot change
      the meaning of modifierExtension itself).
    element_property: true
    items:
      $ref: Extension.yaml
    title: Extensions that cannot be ignored even if unrecognized
    type: array
  resourceType:
    const: IngredientSubstance
    default: IngredientSubstance
    description: One of the resource types defined as part of FHIR
    title: Resource Type
    type: string
  strength:
    description: The quantity of substance in the unit of presentation, or in the
      volume (or mass) of the single pharmaceutical product or manufactured item.
      The allowed repetitions do not represent different strengths, but are different
      representations - mathematically equivalent - of a single strength.
    element_property: true
    items:
      $ref: IngredientSubstanceStrength.yaml
    title: The quantity of substance, per presentation, or per volume or mass, and
      type of quantity
    type: array
required:
- code
title: IngredientSubstance
type: object

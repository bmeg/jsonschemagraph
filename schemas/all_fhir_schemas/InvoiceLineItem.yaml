$id: InvoiceLineItem
additionalProperties: false
description: Line items of this Invoice. Each line item represents one charge for
  goods and services rendered. Details such.ofType(date), code and amount are found
  in the referenced ChargeItem resource. [See https://hl7.org/fhir/R5/InvoiceLineItem.html]
  [See https://hl7.org/fhir/R5/InvoiceLineItem.html]
links:
- href: ChargeItem/{id}
  rel: chargeItemReference
  targetHints:
    backref:
    - invoice_line_item
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: ChargeItem.yaml
  templatePointers:
    id: /chargeItemReference/reference
  templateRequired:
  - id
properties:
  _sequence:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``sequence``.
  _servicedDate:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``servicedDate``.
  chargeItemCodeableConcept:
    $ref: CodeableConcept.yaml
    description: The ChargeItem contains information such as the billing code, date,
      amount etc. If no further details are required for the lineItem, inline billing
      codes can be added using the CodeableConcept data type instead of the Reference.
    element_property: true
    one_of_many: chargeItem
    one_of_many_required: true
    title: Reference to ChargeItem containing details of this line item or an inline
      billing code
  chargeItemReference:
    $ref: Reference.yaml
    backref: invoice_line_item
    description: The ChargeItem contains information such as the billing code, date,
      amount etc. If no further details are required for the lineItem, inline billing
      codes can be added using the CodeableConcept data type instead of the Reference.
    element_property: true
    enum_reference_types:
    - ChargeItem
    one_of_many: chargeItem
    one_of_many_required: true
    title: Reference to ChargeItem containing details of this line item or an inline
      billing code
  extension:
    description: May be used to represent additional information that is not part
      of the basic definition of the element. To make the use of extensions safe and
      managable, there is a strict set of governance applied to the definition and
      use of extensions. Though any implementer can define an extension, there is
      a set of requirements that SHALL be met as part of the definition of the extension.
    element_property: true
    items:
      $ref: Extension.yaml
    title: Additional content defined by implementations
    type: array
  fhir_comments:
    anyOf:
    - type: string
    - items:
        type: string
      type: array
    element_property: false
    title: Fhir Comments
  id:
    description: Unique id for the element within a resource (for internal references).
      This may be any string value that does not contain spaces.
    element_property: true
    pattern: '[ \r\n\t\S]+'
    title: Unique id for inter-element referencing
    type: string
  links:
    links:
      items:
        $ref: https://json-schema.org/draft/2020-12/links.yaml
      type: array
  modifierExtension:
    description: May be used to represent additional information that is not part
      of the basic definition of the element and that modifies the understanding of
      the element in which it is contained and/or the understanding of the containing
      element's descendants. Usually modifier elements provide negation or qualification.
      To make the use of extensions safe and managable, there is a strict set of governance
      applied to the definition and use of extensions. Though any implementer can
      define an extension, there is a set of requirements that SHALL be met as part
      of the definition of the extension. Applications processing a resource are required
      to check for modifier extensions.  Modifier extensions SHALL NOT change the
      meaning of any elements on Resource or DomainResource (including cannot change
      the meaning of modifierExtension itself).
    element_property: true
    items:
      $ref: Extension.yaml
    title: Extensions that cannot be ignored even if unrecognized
    type: array
  priceComponent:
    description: The price for a ChargeItem may be calculated as a base price with
      surcharges/deductions that apply in certain conditions. A ChargeItemDefinition
      resource that defines the prices, factors and conditions that apply to a billing
      code is currently under development. The priceComponent element can be used
      to offer transparency to the recipient of the Invoice as to how the prices have
      been calculated.
    element_property: true
    items:
      $ref: MonetaryComponent.yaml
    title: Components of total line item price
    type: array
  resourceType:
    const: InvoiceLineItem
    default: InvoiceLineItem
    description: One of the resource types defined as part of FHIR
    title: Resource Type
    type: string
  sequence:
    description: Sequence in which the items appear on the invoice.
    element_property: true
    exclusiveMinimum: 0
    title: Sequence number of line item
    type: integer
  servicedDate:
    description: Date/time(s) range when this service was delivered or completed.
    element_property: true
    format: date
    one_of_many: serviced
    one_of_many_required: false
    title: Service data or period
    type: string
  servicedPeriod:
    $ref: Period.yaml
    description: Date/time(s) range when this service was delivered or completed.
    element_property: true
    one_of_many: serviced
    one_of_many_required: false
    title: Service data or period
title: InvoiceLineItem
type: object

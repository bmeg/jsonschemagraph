$id: TestScriptMetadataCapability
additionalProperties: false
description: Capabilities  that are assumed to function correctly on the FHIR server
  being tested. Capabilities that must exist and are assumed to function correctly
  on the FHIR server being tested. [See https://hl7.org/fhir/R5/TestScriptMetadataCapability.html]
  [See https://hl7.org/fhir/R5/TestScriptMetadataCapability.html]
links: []
properties:
  _capabilities:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``capabilities``.
  _description:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``description``.
  _destination:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``destination``.
  _link:
    items:
      $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``link``.
    type: array
  _origin:
    items:
      $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``origin``.
    type: array
  _required:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``required``.
  _validated:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``validated``.
  capabilities:
    description: Minimum capabilities required of server for test script to execute
      successfully.   If server does not meet at a minimum the referenced capability
      statement, then all tests in this script are skipped.
    element_property: true
    element_required: true
    enum_reference_types:
    - CapabilityStatement
    pattern: \S*
    title: Required Capability Statement
    type: string
  description:
    description: Description of the capabilities that this test script is requiring
      the server to support.
    element_property: true
    pattern: '[ \r\n\t\S]+'
    title: The expected capabilities of the server
    type: string
  destination:
    element_property: true
    title: Which server these requirements apply to
    type: integer
  extension:
    description: May be used to represent additional information that is not part
      of the basic definition of the element. To make the use of extensions safe and
      managable, there is a strict set of governance applied to the definition and
      use of extensions. Though any implementer can define an extension, there is
      a set of requirements that SHALL be met as part of the definition of the extension.
    element_property: true
    items:
      $ref: Extension.yaml
    title: Additional content defined by implementations
    type: array
  fhir_comments:
    anyOf:
    - type: string
    - items:
        type: string
      type: array
    element_property: false
    title: Fhir Comments
  id:
    description: Unique id for the element within a resource (for internal references).
      This may be any string value that does not contain spaces.
    element_property: true
    pattern: '[ \r\n\t\S]+'
    title: Unique id for inter-element referencing
    type: string
  link:
    description: Links to the FHIR specification that describes this interaction and
      the resources involved in more detail.
    element_property: true
    items:
      pattern: \S*
      type: string
    title: Links to the FHIR specification
    type: array
  links:
    links:
      items:
        $ref: https://json-schema.org/draft/2020-12/links.yaml
      type: array
  modifierExtension:
    description: May be used to represent additional information that is not part
      of the basic definition of the element and that modifies the understanding of
      the element in which it is contained and/or the understanding of the containing
      element's descendants. Usually modifier elements provide negation or qualification.
      To make the use of extensions safe and managable, there is a strict set of governance
      applied to the definition and use of extensions. Though any implementer can
      define an extension, there is a set of requirements that SHALL be met as part
      of the definition of the extension. Applications processing a resource are required
      to check for modifier extensions.  Modifier extensions SHALL NOT change the
      meaning of any elements on Resource or DomainResource (including cannot change
      the meaning of modifierExtension itself).
    element_property: true
    items:
      $ref: Extension.yaml
    title: Extensions that cannot be ignored even if unrecognized
    type: array
  origin:
    element_property: true
    items:
      type: integer
    title: Which origin server these requirements apply to
    type: array
  required:
    description: Whether or not the test execution will require the given capabilities
      of the server in order for this test script to execute.
    element_property: true
    element_required: true
    title: Are the capabilities required?
    type: boolean
  resourceType:
    const: TestScriptMetadataCapability
    default: TestScriptMetadataCapability
    description: One of the resource types defined as part of FHIR
    title: Resource Type
    type: string
  validated:
    description: Whether or not the test execution will validate the given capabilities
      of the server in order for this test script to execute.
    element_property: true
    element_required: true
    title: Are the capabilities validated?
    type: boolean
title: TestScriptMetadataCapability
type: object

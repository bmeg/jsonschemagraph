$id: ContractTermAssetContext
additionalProperties: false
description: Circumstance of the asset. [See https://hl7.org/fhir/R5/ContractTermAssetContext.html]
  [See https://hl7.org/fhir/R5/ContractTermAssetContext.html]
links:
- href: Resource/{id}
  rel: reference
  targetHints:
    backref:
    - contract_term_asset_context
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Resource.yaml
  templatePointers:
    id: /reference/reference
  templateRequired:
  - id
properties:
  _text:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``text``.
  code:
    binding_description: Codes for the context of the asset.
    binding_strength: example
    binding_uri: http://hl7.org/fhir/ValueSet/contract-assetcontext
    binding_version: null
    description: Coded representation of the context generally or of the Referenced
      entity, such as the asset holder type or location.
    element_property: true
    items:
      $ref: CodeableConcept.yaml
    title: Codeable asset context
    type: array
  extension:
    description: May be used to represent additional information that is not part
      of the basic definition of the element. To make the use of extensions safe and
      managable, there is a strict set of governance applied to the definition and
      use of extensions. Though any implementer can define an extension, there is
      a set of requirements that SHALL be met as part of the definition of the extension.
    element_property: true
    items:
      $ref: Extension.yaml
    title: Additional content defined by implementations
    type: array
  fhir_comments:
    anyOf:
    - type: string
    - items:
        type: string
      type: array
    element_property: false
    title: Fhir Comments
  id:
    description: Unique id for the element within a resource (for internal references).
      This may be any string value that does not contain spaces.
    element_property: true
    pattern: '[ \r\n\t\S]+'
    title: Unique id for inter-element referencing
    type: string
  links:
    links:
      items:
        $ref: https://json-schema.org/draft/2020-12/links.yaml
      type: array
  modifierExtension:
    description: May be used to represent additional information that is not part
      of the basic definition of the element and that modifies the understanding of
      the element in which it is contained and/or the understanding of the containing
      element's descendants. Usually modifier elements provide negation or qualification.
      To make the use of extensions safe and managable, there is a strict set of governance
      applied to the definition and use of extensions. Though any implementer can
      define an extension, there is a set of requirements that SHALL be met as part
      of the definition of the extension. Applications processing a resource are required
      to check for modifier extensions.  Modifier extensions SHALL NOT change the
      meaning of any elements on Resource or DomainResource (including cannot change
      the meaning of modifierExtension itself).
    element_property: true
    items:
      $ref: Extension.yaml
    title: Extensions that cannot be ignored even if unrecognized
    type: array
  reference:
    $ref: Reference.yaml
    backref: contract_term_asset_context
    description: Asset context reference may include the creator, custodian, or owning
      Person or Organization (e.g., bank, repository),  location held, e.g., building,  jurisdiction.
    element_property: true
    enum_reference_types:
    - Resource
    title: Creator,custodian or owner
  resourceType:
    const: ContractTermAssetContext
    default: ContractTermAssetContext
    description: One of the resource types defined as part of FHIR
    title: Resource Type
    type: string
  text:
    element_property: true
    pattern: '[ \r\n\t\S]+'
    title: Context description
    type: string
title: ContractTermAssetContext
type: object

$id: TestScriptSetupActionOperation
additionalProperties: false
description: The setup operation to perform. The operation to perform. [See https://hl7.org/fhir/R5/TestScriptSetupActionOperation.html]
  [See https://hl7.org/fhir/R5/TestScriptSetupActionOperation.html]
links: []
properties:
  _accept:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``accept``.
  _contentType:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``contentType``.
  _description:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``description``.
  _destination:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``destination``.
  _encodeRequestUrl:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``encodeRequestUrl``.
  _label:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``label``.
  _method:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``method``.
  _origin:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``origin``.
  _params:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``params``.
  _requestId:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``requestId``.
  _resource:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``resource``.
  _responseId:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``responseId``.
  _sourceId:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``sourceId``.
  _targetId:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``targetId``.
  _url:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``url``.
  accept:
    binding_description: BCP 13 (RFCs 2045, 2046, 2047, 4288, 4289 and 2049)
    binding_strength: required
    binding_uri: http://hl7.org/fhir/ValueSet/mimetypes
    binding_version: 5.0.0
    description: The mime-type to use for RESTful operation in the 'Accept' header.
    element_property: true
    pattern: ^[^\s]+(\s[^\s]+)*$
    title: Mime type to accept in the payload of the response, with charset etc
    type: string
  contentType:
    binding_description: BCP 13 (RFCs 2045, 2046, 2047, 4288, 4289 and 2049)
    binding_strength: required
    binding_uri: http://hl7.org/fhir/ValueSet/mimetypes
    binding_version: 5.0.0
    description: The mime-type to use for RESTful operation in the 'Content-Type'
      header.
    element_property: true
    pattern: ^[^\s]+(\s[^\s]+)*$
    title: Mime type of the request payload contents, with charset etc
    type: string
  description:
    description: The description would be used by test engines for tracking and reporting
      purposes.
    element_property: true
    pattern: '[ \r\n\t\S]+'
    title: Tracking/reporting operation description
    type: string
  destination:
    description: The server where the request message is destined for.  Must be one
      of the server numbers listed in TestScript.destination section.
    element_property: true
    title: Server responding to the request
    type: integer
  encodeRequestUrl:
    description: Whether or not to implicitly send the request url in encoded format.
      The default is true to match the standard RESTful client behavior. Set to false
      when communicating with a server that does not support encoded url paths.
    element_property: true
    element_required: true
    title: Whether or not to send the request url in encoded format
    type: boolean
  extension:
    description: May be used to represent additional information that is not part
      of the basic definition of the element. To make the use of extensions safe and
      managable, there is a strict set of governance applied to the definition and
      use of extensions. Though any implementer can define an extension, there is
      a set of requirements that SHALL be met as part of the definition of the extension.
    element_property: true
    items:
      $ref: Extension.yaml
    title: Additional content defined by implementations
    type: array
  fhir_comments:
    anyOf:
    - type: string
    - items:
        type: string
      type: array
    element_property: false
    title: Fhir Comments
  id:
    description: Unique id for the element within a resource (for internal references).
      This may be any string value that does not contain spaces.
    element_property: true
    pattern: '[ \r\n\t\S]+'
    title: Unique id for inter-element referencing
    type: string
  label:
    description: The label would be used for tracking/logging purposes by test engines.
    element_property: true
    pattern: '[ \r\n\t\S]+'
    title: Tracking/logging operation label
    type: string
  links:
    links:
      items:
        $ref: https://json-schema.org/draft/2020-12/links.yaml
      type: array
  method:
    binding_description: The allowable request method or HTTP operation codes.
    binding_strength: required
    binding_uri: http://hl7.org/fhir/ValueSet/http-operations
    binding_version: 5.0.0
    description: The HTTP method the test engine MUST use for this operation regardless
      of any other operation details.
    element_property: true
    enum_values:
    - delete
    - get
    - options
    - patch
    - post
    - put
    - head
    pattern: ^[^\s]+(\s[^\s]+)*$
    title: delete | get | options | patch | post | put | head
    type: string
  modifierExtension:
    description: May be used to represent additional information that is not part
      of the basic definition of the element and that modifies the understanding of
      the element in which it is contained and/or the understanding of the containing
      element's descendants. Usually modifier elements provide negation or qualification.
      To make the use of extensions safe and managable, there is a strict set of governance
      applied to the definition and use of extensions. Though any implementer can
      define an extension, there is a set of requirements that SHALL be met as part
      of the definition of the extension. Applications processing a resource are required
      to check for modifier extensions.  Modifier extensions SHALL NOT change the
      meaning of any elements on Resource or DomainResource (including cannot change
      the meaning of modifierExtension itself).
    element_property: true
    items:
      $ref: Extension.yaml
    title: Extensions that cannot be ignored even if unrecognized
    type: array
  origin:
    description: The server where the request message originates from.  Must be one
      of the server numbers listed in TestScript.origin section.
    element_property: true
    title: Server initiating the request
    type: integer
  params:
    description: Path plus parameters after [type].  Used to set parts of the request
      URL explicitly.
    element_property: true
    pattern: '[ \r\n\t\S]+'
    title: Explicitly defined path parameters
    type: string
  requestHeader:
    description: Header elements would be used to set HTTP headers.
    element_property: true
    items:
      $ref: TestScriptSetupActionOperationRequestHeader.yaml
    title: Each operation can have one or more header elements
    type: array
  requestId:
    description: The fixture id (maybe new) to map to the request.
    element_property: true
    maxLength: 64
    minLength: 1
    pattern: ^[A-Za-z0-9\-.]+$
    title: Fixture Id of mapped request
    type: string
  resource:
    binding_description: A list of all the concrete types defined in this version
      of the FHIR specification - Data Types and Resource Types.
    binding_strength: extensible
    binding_uri: http://hl7.org/fhir/ValueSet/concrete-fhir-types
    binding_version: null
    description: The type of the FHIR resource. See the [resource list](resourcelist.html).
      Data type of uri is needed when non-HL7 artifacts are identified.
    element_property: true
    pattern: \S*
    title: Resource type
    type: string
  resourceType:
    const: TestScriptSetupActionOperation
    default: TestScriptSetupActionOperation
    description: One of the resource types defined as part of FHIR
    title: Resource Type
    type: string
  responseId:
    description: The fixture id (maybe new) to map to the response.
    element_property: true
    maxLength: 64
    minLength: 1
    pattern: ^[A-Za-z0-9\-.]+$
    title: Fixture Id of mapped response
    type: string
  sourceId:
    description: The id of the fixture used as the body of a PUT or POST request.
    element_property: true
    maxLength: 64
    minLength: 1
    pattern: ^[A-Za-z0-9\-.]+$
    title: Fixture Id of body for PUT and POST requests
    type: string
  targetId:
    element_property: true
    maxLength: 64
    minLength: 1
    pattern: ^[A-Za-z0-9\-.]+$
    title: Id of fixture used for extracting the [id],  [type], and [vid] for GET
      requests
    type: string
  type:
    $ref: Coding.yaml
    binding_description: FHIR Operation Code Types
    binding_strength: extensible
    binding_uri: http://hl7.org/fhir/ValueSet/testscript-operation-codes
    binding_version: null
    description: Server interaction or operation type.
    element_property: true
    title: The operation code type that will be executed
  url:
    description: Complete request URL.
    element_property: true
    pattern: '[ \r\n\t\S]+'
    title: Request URL
    type: string
title: TestScriptSetupActionOperation
type: object

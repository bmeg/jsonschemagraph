$id: TestPlanTestCaseAssertion
additionalProperties: false
description: Test assertions or expectations. The test assertions - the expectations
  of test results from the execution of the test case. [See https://hl7.org/fhir/R5/TestPlanTestCaseAssertion.html]
  [See https://hl7.org/fhir/R5/TestPlanTestCaseAssertion.html]
links:
- href: Reference/{id}
  rel: object_reference
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Reference.yaml
  templatePointers:
    id: /object/-/reference/reference
  templateRequired:
  - id
- href: Reference/{id}
  rel: result_reference
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Reference.yaml
  templatePointers:
    id: /result/-/reference/reference
  templateRequired:
  - id
properties:
  extension:
    description: May be used to represent additional information that is not part
      of the basic definition of the element. To make the use of extensions safe and
      managable, there is a strict set of governance applied to the definition and
      use of extensions. Though any implementer can define an extension, there is
      a set of requirements that SHALL be met as part of the definition of the extension.
    element_property: true
    items:
      $ref: Extension.yaml
    title: Additional content defined by implementations
    type: array
  fhir_comments:
    anyOf:
    - type: string
    - items:
        type: string
      type: array
    element_property: false
    title: Fhir Comments
  id:
    description: Unique id for the element within a resource (for internal references).
      This may be any string value that does not contain spaces.
    element_property: true
    pattern: '[ \r\n\t\S]+'
    title: Unique id for inter-element referencing
    type: string
  links:
    links:
      items:
        $ref: https://json-schema.org/draft/2020-12/links.yaml
      type: array
  modifierExtension:
    description: May be used to represent additional information that is not part
      of the basic definition of the element and that modifies the understanding of
      the element in which it is contained and/or the understanding of the containing
      element's descendants. Usually modifier elements provide negation or qualification.
      To make the use of extensions safe and managable, there is a strict set of governance
      applied to the definition and use of extensions. Though any implementer can
      define an extension, there is a set of requirements that SHALL be met as part
      of the definition of the extension. Applications processing a resource are required
      to check for modifier extensions.  Modifier extensions SHALL NOT change the
      meaning of any elements on Resource or DomainResource (including cannot change
      the meaning of modifierExtension itself).
    element_property: true
    items:
      $ref: Extension.yaml
    title: Extensions that cannot be ignored even if unrecognized
    type: array
  object:
    backref: object_test_plan_test_case_assertion
    description: The focus or object of the assertion i.e. a resource.
    element_property: true
    items:
      $ref: CodeableReference.yaml
    title: The focus or object of the assertion
    type: array
  resourceType:
    const: TestPlanTestCaseAssertion
    default: TestPlanTestCaseAssertion
    description: One of the resource types defined as part of FHIR
    title: Resource Type
    type: string
  result:
    backref: result_test_plan_test_case_assertion
    description: The test assertion - the expected outcome from the test case execution.
    element_property: true
    items:
      $ref: CodeableReference.yaml
    title: The actual result assertion
    type: array
  type:
    description: The test assertion type - this can be used to group assertions as
      'required' or 'optional', or can be used for other classification of the assertion.
    element_property: true
    items:
      $ref: CodeableConcept.yaml
    title: 'Assertion type - for example ''informative'' or ''required'' '
    type: array
title: TestPlanTestCaseAssertion
type: object

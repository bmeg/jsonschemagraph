$id: CapabilityStatementRestResourceSearchParam
additionalProperties: false
description: Search parameters supported by implementation. Search parameters for
  implementations to support and/or make use of - either references to ones defined
  in the specification, or additional ones defined for/by the implementation. [See
  https://hl7.org/fhir/R5/CapabilityStatementRestResourceSearchParam.html] [See https://hl7.org/fhir/R5/CapabilityStatementRestResourceSearchParam.html]
  [See https://hl7.org/fhir/R5/CapabilityStatementRestResourceSearchParam.html]
links: []
properties:
  _definition:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``definition``.
  _documentation:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``documentation``.
  _name:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``name``.
  _type:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``type``.
  definition:
    description: An absolute URI that is a formal reference to where this parameter
      was first defined, so that a client can be confident of the meaning of the search
      parameter (a reference to [SearchParameter.url](searchparameter-definitions.html#SearchParameter.url)).
      This element SHALL be populated if the search parameter refers to a SearchParameter
      defined by the FHIR core specification or externally defined IGs.
    element_property: true
    enum_reference_types:
    - SearchParameter
    pattern: \S*
    title: Source of definition for parameter
    type: string
  documentation:
    description: This allows documentation of any distinct behaviors about how the
      search parameter is used.  For example, text matching algorithms.
    element_property: true
    pattern: \s*(\S|\s)*
    title: Server-specific usage
    type: string
  extension:
    description: May be used to represent additional information that is not part
      of the basic definition of the element. To make the use of extensions safe and
      managable, there is a strict set of governance applied to the definition and
      use of extensions. Though any implementer can define an extension, there is
      a set of requirements that SHALL be met as part of the definition of the extension.
    element_property: true
    items:
      $ref: Extension.yaml
    title: Additional content defined by implementations
    type: array
  fhir_comments:
    anyOf:
    - type: string
    - items:
        type: string
      type: array
    element_property: false
    title: Fhir Comments
  id:
    description: Unique id for the element within a resource (for internal references).
      This may be any string value that does not contain spaces.
    element_property: true
    pattern: '[ \r\n\t\S]+'
    title: Unique id for inter-element referencing
    type: string
  links:
    links:
      items:
        $ref: https://json-schema.org/draft/2020-12/links.yaml
      type: array
  modifierExtension:
    description: May be used to represent additional information that is not part
      of the basic definition of the element and that modifies the understanding of
      the element in which it is contained and/or the understanding of the containing
      element's descendants. Usually modifier elements provide negation or qualification.
      To make the use of extensions safe and managable, there is a strict set of governance
      applied to the definition and use of extensions. Though any implementer can
      define an extension, there is a set of requirements that SHALL be met as part
      of the definition of the extension. Applications processing a resource are required
      to check for modifier extensions.  Modifier extensions SHALL NOT change the
      meaning of any elements on Resource or DomainResource (including cannot change
      the meaning of modifierExtension itself).
    element_property: true
    items:
      $ref: Extension.yaml
    title: Extensions that cannot be ignored even if unrecognized
    type: array
  name:
    description: The label used for the search parameter in this particular system's
      API - i.e. the 'name' portion of the name-value pair that will appear as part
      of the search URL.  This SHOULD be the same as the SearchParameter.code of the
      defining SearchParameter.  However, it can sometimes differ if necessary to
      disambiguate when a server supports multiple SearchParameters that happen to
      share the same code.
    element_property: true
    element_required: true
    pattern: '[ \r\n\t\S]+'
    title: Name for parameter in search url
    type: string
  resourceType:
    const: CapabilityStatementRestResourceSearchParam
    default: CapabilityStatementRestResourceSearchParam
    description: One of the resource types defined as part of FHIR
    title: Resource Type
    type: string
  type:
    binding_description: Data types allowed to be used for search parameters.
    binding_strength: required
    binding_uri: http://hl7.org/fhir/ValueSet/search-param-type
    binding_version: 5.0.0
    description: The type of value a search parameter refers to, and how the content
      is interpreted.
    element_property: true
    element_required: true
    enum_values:
    - number
    - date
    - string
    - token
    - reference
    - composite
    - quantity
    - uri
    - special
    pattern: ^[^\s]+(\s[^\s]+)*$
    title: number | date | string | token | reference | composite | quantity | uri
      | special
    type: string
title: CapabilityStatementRestResourceSearchParam
type: object

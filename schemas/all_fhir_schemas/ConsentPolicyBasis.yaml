$id: ConsentPolicyBasis
additionalProperties: false
description: Computable version of the backing policy. A Reference or URL used to
  uniquely identify the policy the organization will enforce for this Consent. This
  Reference or URL should be specific to the version of the policy and should be dereferencable
  to a computable policy of some form. [See https://hl7.org/fhir/R5/ConsentPolicyBasis.html]
  [See https://hl7.org/fhir/R5/ConsentPolicyBasis.html]
links:
- href: Resource/{id}
  rel: reference
  targetHints:
    backref:
    - consent_policy_basis
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Resource.yaml
  templatePointers:
    id: /reference/reference
  templateRequired:
  - id
properties:
  _url:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``url``.
  extension:
    description: May be used to represent additional information that is not part
      of the basic definition of the element. To make the use of extensions safe and
      managable, there is a strict set of governance applied to the definition and
      use of extensions. Though any implementer can define an extension, there is
      a set of requirements that SHALL be met as part of the definition of the extension.
    element_property: true
    items:
      $ref: Extension.yaml
    title: Additional content defined by implementations
    type: array
  fhir_comments:
    anyOf:
    - type: string
    - items:
        type: string
      type: array
    element_property: false
    title: Fhir Comments
  id:
    description: Unique id for the element within a resource (for internal references).
      This may be any string value that does not contain spaces.
    element_property: true
    pattern: '[ \r\n\t\S]+'
    title: Unique id for inter-element referencing
    type: string
  links:
    links:
      items:
        $ref: https://json-schema.org/draft/2020-12/links.yaml
      type: array
  modifierExtension:
    description: May be used to represent additional information that is not part
      of the basic definition of the element and that modifies the understanding of
      the element in which it is contained and/or the understanding of the containing
      element's descendants. Usually modifier elements provide negation or qualification.
      To make the use of extensions safe and managable, there is a strict set of governance
      applied to the definition and use of extensions. Though any implementer can
      define an extension, there is a set of requirements that SHALL be met as part
      of the definition of the extension. Applications processing a resource are required
      to check for modifier extensions.  Modifier extensions SHALL NOT change the
      meaning of any elements on Resource or DomainResource (including cannot change
      the meaning of modifierExtension itself).
    element_property: true
    items:
      $ref: Extension.yaml
    title: Extensions that cannot be ignored even if unrecognized
    type: array
  reference:
    $ref: Reference.yaml
    backref: consent_policy_basis
    description: A Reference that identifies the policy the organization will enforce
      for this Consent.
    element_property: true
    enum_reference_types:
    - Resource
    title: Reference backing policy resource
  resourceType:
    const: ConsentPolicyBasis
    default: ConsentPolicyBasis
    description: One of the resource types defined as part of FHIR
    title: Resource Type
    type: string
  url:
    description: A URL that links to a computable version of the policy the organization
      will enforce for this Consent.
    element_property: true
    format: uri
    maxLength: 65536
    minLength: 1
    title: URL to a computable backing policy
    type: string
title: ConsentPolicyBasis
type: object

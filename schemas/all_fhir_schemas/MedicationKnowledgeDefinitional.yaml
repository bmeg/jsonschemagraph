$id: MedicationKnowledgeDefinitional
additionalProperties: false
description: Minimal definition information about the medication. Along with the link
  to a Medicinal Product Definition resource, this information provides common definitional
  elements that are needed to understand the specific medication that is being described.
  [See https://hl7.org/fhir/R5/MedicationKnowledgeDefinitional.html]
links:
- href: MedicinalProductDefinition/{id}
  rel: definition
  targetHints:
    backref:
    - definition_medication_knowledge_definitional
    direction:
    - outbound
    multiplicity:
    - has_many
  targetSchema:
    $ref: MedicinalProductDefinition.yaml
  templatePointers:
    id: /definition/-/reference
  templateRequired:
  - id
properties:
  definition:
    backref: definition_medication_knowledge_definitional
    description: Associated definitions for this medication.
    element_property: true
    enum_reference_types:
    - MedicinalProductDefinition
    items:
      $ref: Reference.yaml
    title: Definitional resources that provide more information about this medication
    type: array
  doseForm:
    $ref: CodeableConcept.yaml
    binding_description: null
    binding_strength: example
    binding_uri: http://hl7.org/fhir/ValueSet/medication-form-codes
    binding_version: null
    description: Describes the form of the item.  Powder; tablets; capsule.
    element_property: true
    title: powder | tablets | capsule +
  drugCharacteristic:
    description: Specifies descriptive properties of the medicine, such as color,
      shape, imprints, etc.
    element_property: true
    items:
      $ref: MedicationKnowledgeDefinitionalDrugCharacteristic.yaml
    title: Specifies descriptive properties of the medicine
    type: array
  extension:
    description: May be used to represent additional information that is not part
      of the basic definition of the element. To make the use of extensions safe and
      managable, there is a strict set of governance applied to the definition and
      use of extensions. Though any implementer can define an extension, there is
      a set of requirements that SHALL be met as part of the definition of the extension.
    element_property: true
    items:
      $ref: Extension.yaml
    title: Additional content defined by implementations
    type: array
  fhir_comments:
    anyOf:
    - type: string
    - items:
        type: string
      type: array
    element_property: false
    title: Fhir Comments
  id:
    description: Unique id for the element within a resource (for internal references).
      This may be any string value that does not contain spaces.
    element_property: true
    pattern: '[ \r\n\t\S]+'
    title: Unique id for inter-element referencing
    type: string
  ingredient:
    description: Identifies a particular constituent of interest in the product.
    element_property: true
    items:
      $ref: MedicationKnowledgeDefinitionalIngredient.yaml
    title: Active or inactive ingredient
    type: array
  intendedRoute:
    binding_description: null
    binding_strength: example
    binding_uri: http://hl7.org/fhir/ValueSet/route-codes
    binding_version: null
    element_property: true
    items:
      $ref: CodeableConcept.yaml
    title: The intended or approved route of administration
    type: array
  links:
    links:
      items:
        $ref: https://json-schema.org/draft/2020-12/links.yaml
      type: array
  modifierExtension:
    description: May be used to represent additional information that is not part
      of the basic definition of the element and that modifies the understanding of
      the element in which it is contained and/or the understanding of the containing
      element's descendants. Usually modifier elements provide negation or qualification.
      To make the use of extensions safe and managable, there is a strict set of governance
      applied to the definition and use of extensions. Though any implementer can
      define an extension, there is a set of requirements that SHALL be met as part
      of the definition of the extension. Applications processing a resource are required
      to check for modifier extensions.  Modifier extensions SHALL NOT change the
      meaning of any elements on Resource or DomainResource (including cannot change
      the meaning of modifierExtension itself).
    element_property: true
    items:
      $ref: Extension.yaml
    title: Extensions that cannot be ignored even if unrecognized
    type: array
  resourceType:
    const: MedicationKnowledgeDefinitional
    default: MedicationKnowledgeDefinitional
    description: One of the resource types defined as part of FHIR
    title: Resource Type
    type: string
title: MedicationKnowledgeDefinitional
type: object

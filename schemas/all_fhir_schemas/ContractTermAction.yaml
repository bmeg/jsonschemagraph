$id: ContractTermAction
additionalProperties: false
description: Entity being ascribed responsibility. An actor taking a role in an activity
  for which it can be assigned some degree of responsibility for the activity taking
  place. [See https://hl7.org/fhir/R5/ContractTermAction.html] [See https://hl7.org/fhir/R5/ContractTermAction.html]
links:
- href: Encounter/{id}
  rel: context_Encounter
  targetHints:
    backref:
    - contract_term_action
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Encounter.yaml
  templatePointers:
    id: /context/reference
  templateRequired:
  - id
- href: EpisodeOfCare/{id}
  rel: context_EpisodeOfCare
  targetHints:
    backref:
    - contract_term_action
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: EpisodeOfCare.yaml
  templatePointers:
    id: /context/reference
  templateRequired:
  - id
- href: RelatedPerson/{id}
  rel: performer_RelatedPerson
  targetHints:
    backref:
    - performer_contract_term_action
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: RelatedPerson.yaml
  templatePointers:
    id: /performer/reference
  templateRequired:
  - id
- href: Patient/{id}
  rel: performer_Patient
  targetHints:
    backref:
    - performer_contract_term_action
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Patient.yaml
  templatePointers:
    id: /performer/reference
  templateRequired:
  - id
- href: Practitioner/{id}
  rel: performer_Practitioner
  targetHints:
    backref:
    - performer_contract_term_action
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Practitioner.yaml
  templatePointers:
    id: /performer/reference
  templateRequired:
  - id
- href: PractitionerRole/{id}
  rel: performer_PractitionerRole
  targetHints:
    backref:
    - performer_contract_term_action
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: PractitionerRole.yaml
  templatePointers:
    id: /performer/reference
  templateRequired:
  - id
- href: CareTeam/{id}
  rel: performer_CareTeam
  targetHints:
    backref:
    - performer_contract_term_action
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: CareTeam.yaml
  templatePointers:
    id: /performer/reference
  templateRequired:
  - id
- href: Device/{id}
  rel: performer_Device
  targetHints:
    backref:
    - performer_contract_term_action
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Device.yaml
  templatePointers:
    id: /performer/reference
  templateRequired:
  - id
- href: Substance/{id}
  rel: performer_Substance
  targetHints:
    backref:
    - performer_contract_term_action
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Substance.yaml
  templatePointers:
    id: /performer/reference
  templateRequired:
  - id
- href: Organization/{id}
  rel: performer_Organization
  targetHints:
    backref:
    - performer_contract_term_action
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Organization.yaml
  templatePointers:
    id: /performer/reference
  templateRequired:
  - id
- href: Location/{id}
  rel: performer_Location
  targetHints:
    backref:
    - performer_contract_term_action
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Location.yaml
  templatePointers:
    id: /performer/reference
  templateRequired:
  - id
- href: Patient/{id}
  rel: requester_Patient
  targetHints:
    backref:
    - requester_contract_term_action
    direction:
    - outbound
    multiplicity:
    - has_many
  targetSchema:
    $ref: Patient.yaml
  templatePointers:
    id: /requester/-/reference
  templateRequired:
  - id
- href: RelatedPerson/{id}
  rel: requester_RelatedPerson
  targetHints:
    backref:
    - requester_contract_term_action
    direction:
    - outbound
    multiplicity:
    - has_many
  targetSchema:
    $ref: RelatedPerson.yaml
  templatePointers:
    id: /requester/-/reference
  templateRequired:
  - id
- href: Practitioner/{id}
  rel: requester_Practitioner
  targetHints:
    backref:
    - requester_contract_term_action
    direction:
    - outbound
    multiplicity:
    - has_many
  targetSchema:
    $ref: Practitioner.yaml
  templatePointers:
    id: /requester/-/reference
  templateRequired:
  - id
- href: PractitionerRole/{id}
  rel: requester_PractitionerRole
  targetHints:
    backref:
    - requester_contract_term_action
    direction:
    - outbound
    multiplicity:
    - has_many
  targetSchema:
    $ref: PractitionerRole.yaml
  templatePointers:
    id: /requester/-/reference
  templateRequired:
  - id
- href: Device/{id}
  rel: requester_Device
  targetHints:
    backref:
    - requester_contract_term_action
    direction:
    - outbound
    multiplicity:
    - has_many
  targetSchema:
    $ref: Device.yaml
  templatePointers:
    id: /requester/-/reference
  templateRequired:
  - id
- href: Group/{id}
  rel: requester_Group
  targetHints:
    backref:
    - requester_contract_term_action
    direction:
    - outbound
    multiplicity:
    - has_many
  targetSchema:
    $ref: Group.yaml
  templatePointers:
    id: /requester/-/reference
  templateRequired:
  - id
- href: Organization/{id}
  rel: requester_Organization
  targetHints:
    backref:
    - requester_contract_term_action
    direction:
    - outbound
    multiplicity:
    - has_many
  targetSchema:
    $ref: Organization.yaml
  templatePointers:
    id: /requester/-/reference
  templateRequired:
  - id
- href: Practitioner/{id}
  rel: note_authorReference_Practitioner
  targetHints:
    backref:
    - annotation
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Practitioner.yaml
  templatePointers:
    id: /note/-/authorReference/reference
  templateRequired:
  - id
- href: PractitionerRole/{id}
  rel: note_authorReference_PractitionerRole
  targetHints:
    backref:
    - annotation
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: PractitionerRole.yaml
  templatePointers:
    id: /note/-/authorReference/reference
  templateRequired:
  - id
- href: Patient/{id}
  rel: note_authorReference_Patient
  targetHints:
    backref:
    - annotation
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Patient.yaml
  templatePointers:
    id: /note/-/authorReference/reference
  templateRequired:
  - id
- href: RelatedPerson/{id}
  rel: note_authorReference_RelatedPerson
  targetHints:
    backref:
    - annotation
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: RelatedPerson.yaml
  templatePointers:
    id: /note/-/authorReference/reference
  templateRequired:
  - id
- href: Organization/{id}
  rel: note_authorReference_Organization
  targetHints:
    backref:
    - annotation
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Organization.yaml
  templatePointers:
    id: /note/-/authorReference/reference
  templateRequired:
  - id
- href: Reference/{id}
  rel: reason_reference
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Reference.yaml
  templatePointers:
    id: /reason/-/reference/reference
  templateRequired:
  - id
- href: Patient/{id}
  rel: subject_reference_Patient
  targetHints:
    backref:
    - reference_contract_term_action_subject
    direction:
    - outbound
    multiplicity:
    - has_many
  targetSchema:
    $ref: Patient.yaml
  templatePointers:
    id: /subject/-/reference/-/reference
  templateRequired:
  - id
- href: RelatedPerson/{id}
  rel: subject_reference_RelatedPerson
  targetHints:
    backref:
    - reference_contract_term_action_subject
    direction:
    - outbound
    multiplicity:
    - has_many
  targetSchema:
    $ref: RelatedPerson.yaml
  templatePointers:
    id: /subject/-/reference/-/reference
  templateRequired:
  - id
- href: Practitioner/{id}
  rel: subject_reference_Practitioner
  targetHints:
    backref:
    - reference_contract_term_action_subject
    direction:
    - outbound
    multiplicity:
    - has_many
  targetSchema:
    $ref: Practitioner.yaml
  templatePointers:
    id: /subject/-/reference/-/reference
  templateRequired:
  - id
- href: PractitionerRole/{id}
  rel: subject_reference_PractitionerRole
  targetHints:
    backref:
    - reference_contract_term_action_subject
    direction:
    - outbound
    multiplicity:
    - has_many
  targetSchema:
    $ref: PractitionerRole.yaml
  templatePointers:
    id: /subject/-/reference/-/reference
  templateRequired:
  - id
- href: Device/{id}
  rel: subject_reference_Device
  targetHints:
    backref:
    - reference_contract_term_action_subject
    direction:
    - outbound
    multiplicity:
    - has_many
  targetSchema:
    $ref: Device.yaml
  templatePointers:
    id: /subject/-/reference/-/reference
  templateRequired:
  - id
- href: Group/{id}
  rel: subject_reference_Group
  targetHints:
    backref:
    - reference_contract_term_action_subject
    direction:
    - outbound
    multiplicity:
    - has_many
  targetSchema:
    $ref: Group.yaml
  templatePointers:
    id: /subject/-/reference/-/reference
  templateRequired:
  - id
- href: Organization/{id}
  rel: subject_reference_Organization
  targetHints:
    backref:
    - reference_contract_term_action_subject
    direction:
    - outbound
    multiplicity:
    - has_many
  targetSchema:
    $ref: Organization.yaml
  templatePointers:
    id: /subject/-/reference/-/reference
  templateRequired:
  - id
properties:
  _contextLinkId:
    items:
      $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``contextLinkId``.
    type: array
  _doNotPerform:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``doNotPerform``.
  _linkId:
    items:
      $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``linkId``.
    type: array
  _occurrenceDateTime:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``occurrenceDateTime``.
  _performerLinkId:
    items:
      $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``performerLinkId``.
    type: array
  _reasonLinkId:
    items:
      $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``reasonLinkId``.
    type: array
  _requesterLinkId:
    items:
      $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``requesterLinkId``.
    type: array
  _securityLabelNumber:
    items:
      $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``securityLabelNumber``.
    type: array
  context:
    $ref: Reference.yaml
    backref: contract_term_action
    description: Encounter or Episode with primary association to the specified term
      activity.
    element_property: true
    enum_reference_types:
    - Encounter
    - EpisodeOfCare
    title: Episode associated with action
  contextLinkId:
    description: Id [identifier??] of the clause or question text related to the requester
      of this action in the referenced form or QuestionnaireResponse.
    element_property: true
    items:
      pattern: '[ \r\n\t\S]+'
      type: string
    title: Pointer to specific item
    type: array
  doNotPerform:
    element_property: true
    title: True if the term prohibits the  action
    type: boolean
  extension:
    description: May be used to represent additional information that is not part
      of the basic definition of the element. To make the use of extensions safe and
      managable, there is a strict set of governance applied to the definition and
      use of extensions. Though any implementer can define an extension, there is
      a set of requirements that SHALL be met as part of the definition of the extension.
    element_property: true
    items:
      $ref: Extension.yaml
    title: Additional content defined by implementations
    type: array
  fhir_comments:
    anyOf:
    - type: string
    - items:
        type: string
      type: array
    element_property: false
    title: Fhir Comments
  id:
    description: Unique id for the element within a resource (for internal references).
      This may be any string value that does not contain spaces.
    element_property: true
    pattern: '[ \r\n\t\S]+'
    title: Unique id for inter-element referencing
    type: string
  intent:
    $ref: CodeableConcept.yaml
    binding_description: Detailed codes for the contract action reason.
    binding_strength: example
    binding_uri: http://terminology.hl7.org/ValueSet/v3-PurposeOfUse
    binding_version: null
    description: Reason or purpose for the action stipulated by this Contract Provision.
    element_property: true
    title: Purpose for the Contract Term Action
  linkId:
    description: Id [identifier??] of the clause or question text related to this
      action in the referenced form or QuestionnaireResponse.
    element_property: true
    items:
      pattern: '[ \r\n\t\S]+'
      type: string
    title: Pointer to specific item
    type: array
  links:
    links:
      items:
        $ref: https://json-schema.org/draft/2020-12/links.yaml
      type: array
  modifierExtension:
    description: May be used to represent additional information that is not part
      of the basic definition of the element and that modifies the understanding of
      the element in which it is contained and/or the understanding of the containing
      element's descendants. Usually modifier elements provide negation or qualification.
      To make the use of extensions safe and managable, there is a strict set of governance
      applied to the definition and use of extensions. Though any implementer can
      define an extension, there is a set of requirements that SHALL be met as part
      of the definition of the extension. Applications processing a resource are required
      to check for modifier extensions.  Modifier extensions SHALL NOT change the
      meaning of any elements on Resource or DomainResource (including cannot change
      the meaning of modifierExtension itself).
    element_property: true
    items:
      $ref: Extension.yaml
    title: Extensions that cannot be ignored even if unrecognized
    type: array
  note:
    description: Comments made about the term action made by the requester, performer,
      subject or other participants.
    element_property: true
    items:
      $ref: Annotation.yaml
    title: Comments about the action
    type: array
  occurrenceDateTime:
    element_property: true
    format: date-time
    one_of_many: occurrence
    one_of_many_required: false
    title: When action happens
    type: string
  occurrencePeriod:
    $ref: Period.yaml
    element_property: true
    one_of_many: occurrence
    one_of_many_required: false
    title: When action happens
  occurrenceTiming:
    $ref: Timing.yaml
    element_property: true
    one_of_many: occurrence
    one_of_many_required: false
    title: When action happens
  performer:
    $ref: Reference.yaml
    backref: performer_contract_term_action
    description: Indicates who or what is being asked to perform (or not perform)
      the ction.
    element_property: true
    enum_reference_types:
    - RelatedPerson
    - Patient
    - Practitioner
    - PractitionerRole
    - CareTeam
    - Device
    - Substance
    - Organization
    - Location
    title: Actor that wil execute (or not) the action
  performerLinkId:
    description: Id [identifier??] of the clause or question text related to the reason
      type or reference of this  action in the referenced form or QuestionnaireResponse.
    element_property: true
    items:
      pattern: '[ \r\n\t\S]+'
      type: string
    title: Pointer to specific item
    type: array
  performerRole:
    $ref: CodeableConcept.yaml
    binding_description: Codes for the role of the action performer.
    binding_strength: example
    binding_uri: http://hl7.org/fhir/ValueSet/security-role-type
    binding_version: null
    description: The type of role or competency of an individual desired or required
      to perform or not perform the action.
    element_property: true
    title: Competency of the performer
  performerType:
    binding_description: Codes for the types of action performer.
    binding_strength: example
    binding_uri: http://hl7.org/fhir/ValueSet/participation-role-type
    binding_version: null
    description: The type of individual that is desired or required to perform or
      not perform the action.
    element_property: true
    items:
      $ref: CodeableConcept.yaml
    title: Kind of service performer
    type: array
  reason:
    backref: reason_contract_term_action
    binding_description: Detailed codes for the contract action reason.
    binding_strength: example
    binding_uri: http://terminology.hl7.org/ValueSet/v3-PurposeOfUse
    binding_version: null
    description: Rationale for the action to be performed or not performed. Describes
      why the action is permitted or prohibited. Either a coded concept, or another
      resource whose existence justifies permitting or not permitting this action.
    element_property: true
    enum_reference_types:
    - Condition
    - Observation
    - DiagnosticReport
    - DocumentReference
    - Questionnaire
    - QuestionnaireResponse
    items:
      $ref: CodeableReference.yaml
    title: Why is action (not) needed?
    type: array
  reasonLinkId:
    description: Id [identifier??] of the clause or question text related to the reason
      type or reference of this  action in the referenced form or QuestionnaireResponse.
    element_property: true
    items:
      pattern: '[ \r\n\t\S]+'
      type: string
    title: Pointer to specific item
    type: array
  requester:
    backref: requester_contract_term_action
    description: Who or what initiated the action and has responsibility for its activation.
    element_property: true
    enum_reference_types:
    - Patient
    - RelatedPerson
    - Practitioner
    - PractitionerRole
    - Device
    - Group
    - Organization
    items:
      $ref: Reference.yaml
    title: Who asked for action
    type: array
  requesterLinkId:
    description: Id [identifier??] of the clause or question text related to the requester
      of this action in the referenced form or QuestionnaireResponse.
    element_property: true
    items:
      pattern: '[ \r\n\t\S]+'
      type: string
    title: Pointer to specific item
    type: array
  resourceType:
    const: ContractTermAction
    default: ContractTermAction
    description: One of the resource types defined as part of FHIR
    title: Resource Type
    type: string
  securityLabelNumber:
    description: Security labels that protects the action.
    element_property: true
    items:
      minimum: 0
      type: integer
    title: Action restriction numbers
    type: array
  status:
    $ref: CodeableConcept.yaml
    binding_description: Codes for the status of a term action.
    binding_strength: example
    binding_uri: http://hl7.org/fhir/ValueSet/contract-actionstatus
    binding_version: null
    description: Current state of the term action.
    element_property: true
    title: State of the action
  subject:
    element_property: true
    items:
      $ref: ContractTermActionSubject.yaml
    title: Entity of the action
    type: array
  type:
    $ref: CodeableConcept.yaml
    binding_description: Detailed codes for the contract action.
    binding_strength: example
    binding_uri: http://hl7.org/fhir/ValueSet/contract-action
    binding_version: null
    description: Activity or service obligation to be done or not done, performed
      or not performed, effectuated or not by this Contract term.
    element_property: true
    title: Type or form of the action
required:
- intent
- status
- type
title: ContractTermAction
type: object

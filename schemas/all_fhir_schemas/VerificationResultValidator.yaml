$id: VerificationResultValidator
additionalProperties: false
description: Information about the entity validating information. [See https://hl7.org/fhir/R5/VerificationResultValidator.html]
links:
- href: Organization/{id}
  rel: organization
  targetHints:
    backref:
    - verification_result_validator
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Organization.yaml
  templatePointers:
    id: /organization/reference
  templateRequired:
  - id
- href: Practitioner/{id}
  rel: attestationSignature_onBehalfOf_Practitioner
  targetHints:
    backref:
    - onBehalfOf_signature
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Practitioner.yaml
  templatePointers:
    id: /attestationSignature/onBehalfOf/reference
  templateRequired:
  - id
- href: PractitionerRole/{id}
  rel: attestationSignature_onBehalfOf_PractitionerRole
  targetHints:
    backref:
    - onBehalfOf_signature
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: PractitionerRole.yaml
  templatePointers:
    id: /attestationSignature/onBehalfOf/reference
  templateRequired:
  - id
- href: RelatedPerson/{id}
  rel: attestationSignature_onBehalfOf_RelatedPerson
  targetHints:
    backref:
    - onBehalfOf_signature
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: RelatedPerson.yaml
  templatePointers:
    id: /attestationSignature/onBehalfOf/reference
  templateRequired:
  - id
- href: Patient/{id}
  rel: attestationSignature_onBehalfOf_Patient
  targetHints:
    backref:
    - onBehalfOf_signature
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Patient.yaml
  templatePointers:
    id: /attestationSignature/onBehalfOf/reference
  templateRequired:
  - id
- href: Device/{id}
  rel: attestationSignature_onBehalfOf_Device
  targetHints:
    backref:
    - onBehalfOf_signature
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Device.yaml
  templatePointers:
    id: /attestationSignature/onBehalfOf/reference
  templateRequired:
  - id
- href: Organization/{id}
  rel: attestationSignature_onBehalfOf_Organization
  targetHints:
    backref:
    - onBehalfOf_signature
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Organization.yaml
  templatePointers:
    id: /attestationSignature/onBehalfOf/reference
  templateRequired:
  - id
- href: Practitioner/{id}
  rel: attestationSignature_who_Practitioner
  targetHints:
    backref:
    - who_signature
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Practitioner.yaml
  templatePointers:
    id: /attestationSignature/who/reference
  templateRequired:
  - id
- href: PractitionerRole/{id}
  rel: attestationSignature_who_PractitionerRole
  targetHints:
    backref:
    - who_signature
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: PractitionerRole.yaml
  templatePointers:
    id: /attestationSignature/who/reference
  templateRequired:
  - id
- href: RelatedPerson/{id}
  rel: attestationSignature_who_RelatedPerson
  targetHints:
    backref:
    - who_signature
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: RelatedPerson.yaml
  templatePointers:
    id: /attestationSignature/who/reference
  templateRequired:
  - id
- href: Patient/{id}
  rel: attestationSignature_who_Patient
  targetHints:
    backref:
    - who_signature
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Patient.yaml
  templatePointers:
    id: /attestationSignature/who/reference
  templateRequired:
  - id
- href: Device/{id}
  rel: attestationSignature_who_Device
  targetHints:
    backref:
    - who_signature
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Device.yaml
  templatePointers:
    id: /attestationSignature/who/reference
  templateRequired:
  - id
- href: Organization/{id}
  rel: attestationSignature_who_Organization
  targetHints:
    backref:
    - who_signature
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Organization.yaml
  templatePointers:
    id: /attestationSignature/who/reference
  templateRequired:
  - id
properties:
  _identityCertificate:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``identityCertificate``.
  attestationSignature:
    $ref: Signature.yaml
    description: Signed assertion by the validator that they have validated the information.
    element_property: true
    title: Validator signature (digital or image)
  extension:
    description: May be used to represent additional information that is not part
      of the basic definition of the element. To make the use of extensions safe and
      managable, there is a strict set of governance applied to the definition and
      use of extensions. Though any implementer can define an extension, there is
      a set of requirements that SHALL be met as part of the definition of the extension.
    element_property: true
    items:
      $ref: Extension.yaml
    title: Additional content defined by implementations
    type: array
  fhir_comments:
    anyOf:
    - type: string
    - items:
        type: string
      type: array
    element_property: false
    title: Fhir Comments
  id:
    description: Unique id for the element within a resource (for internal references).
      This may be any string value that does not contain spaces.
    element_property: true
    pattern: '[ \r\n\t\S]+'
    title: Unique id for inter-element referencing
    type: string
  identityCertificate:
    element_property: true
    pattern: '[ \r\n\t\S]+'
    title: A digital identity certificate associated with the validator
    type: string
  links:
    links:
      items:
        $ref: https://json-schema.org/draft/2020-12/links.yaml
      type: array
  modifierExtension:
    description: May be used to represent additional information that is not part
      of the basic definition of the element and that modifies the understanding of
      the element in which it is contained and/or the understanding of the containing
      element's descendants. Usually modifier elements provide negation or qualification.
      To make the use of extensions safe and managable, there is a strict set of governance
      applied to the definition and use of extensions. Though any implementer can
      define an extension, there is a set of requirements that SHALL be met as part
      of the definition of the extension. Applications processing a resource are required
      to check for modifier extensions.  Modifier extensions SHALL NOT change the
      meaning of any elements on Resource or DomainResource (including cannot change
      the meaning of modifierExtension itself).
    element_property: true
    items:
      $ref: Extension.yaml
    title: Extensions that cannot be ignored even if unrecognized
    type: array
  organization:
    $ref: Reference.yaml
    backref: verification_result_validator
    element_property: true
    enum_reference_types:
    - Organization
    title: Reference to the organization validating information
  resourceType:
    const: VerificationResultValidator
    default: VerificationResultValidator
    description: One of the resource types defined as part of FHIR
    title: Resource Type
    type: string
required:
- organization
title: VerificationResultValidator
type: object

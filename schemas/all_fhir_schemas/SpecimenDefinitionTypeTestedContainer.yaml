$id: SpecimenDefinitionTypeTestedContainer
additionalProperties: false
description: The specimen's container. [See https://hl7.org/fhir/R5/SpecimenDefinitionTypeTestedContainer.html]
  [See https://hl7.org/fhir/R5/SpecimenDefinitionTypeTestedContainer.html]
links:
- href: SubstanceDefinition/{id}
  rel: additive_additiveReference
  targetHints:
    backref:
    - specimen_definition_type_tested_container_additive
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: SubstanceDefinition.yaml
  templatePointers:
    id: /additive/-/additiveReference/reference
  templateRequired:
  - id
properties:
  _description:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``description``.
  _minimumVolumeString:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``minimumVolumeString``.
  _preparation:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``preparation``.
  additive:
    description: 'Substance introduced in the kind of container to preserve, maintain
      or enhance the specimen. Examples: Formalin, Citrate, EDTA.'
    element_property: true
    items:
      $ref: SpecimenDefinitionTypeTestedContainerAdditive.yaml
    title: Additive associated with container
    type: array
  cap:
    $ref: CodeableConcept.yaml
    binding_description: Color of the container cap.
    binding_strength: example
    binding_uri: http://hl7.org/fhir/ValueSet/container-cap
    binding_version: null
    element_property: true
    title: Color of container cap
  capacity:
    $ref: Quantity.yaml
    description: The capacity (volume or other measure) of this kind of container.
    element_property: true
    title: The capacity of this kind of container
  description:
    description: The textual description of the kind of container.
    element_property: true
    pattern: \s*(\S|\s)*
    title: The description of the kind of container
    type: string
  extension:
    description: May be used to represent additional information that is not part
      of the basic definition of the element. To make the use of extensions safe and
      managable, there is a strict set of governance applied to the definition and
      use of extensions. Though any implementer can define an extension, there is
      a set of requirements that SHALL be met as part of the definition of the extension.
    element_property: true
    items:
      $ref: Extension.yaml
    title: Additional content defined by implementations
    type: array
  fhir_comments:
    anyOf:
    - type: string
    - items:
        type: string
      type: array
    element_property: false
    title: Fhir Comments
  id:
    description: Unique id for the element within a resource (for internal references).
      This may be any string value that does not contain spaces.
    element_property: true
    pattern: '[ \r\n\t\S]+'
    title: Unique id for inter-element referencing
    type: string
  links:
    links:
      items:
        $ref: https://json-schema.org/draft/2020-12/links.yaml
      type: array
  material:
    $ref: CodeableConcept.yaml
    binding_description: SCT 32039001 |Glass|, 61088005 |Plastic|, 425620007 |Metal|
    binding_strength: example
    binding_uri: http://hl7.org/fhir/ValueSet/container-material
    binding_version: null
    description: The type of material of the container.
    element_property: true
    title: The material type used for the container
  minimumVolumeQuantity:
    $ref: Quantity.yaml
    description: The minimum volume to be conditioned in the container.
    element_property: true
    one_of_many: minimumVolume
    one_of_many_required: false
    title: Minimum volume
  minimumVolumeString:
    description: The minimum volume to be conditioned in the container.
    element_property: true
    one_of_many: minimumVolume
    one_of_many_required: false
    pattern: '[ \r\n\t\S]+'
    title: Minimum volume
    type: string
  modifierExtension:
    description: May be used to represent additional information that is not part
      of the basic definition of the element and that modifies the understanding of
      the element in which it is contained and/or the understanding of the containing
      element's descendants. Usually modifier elements provide negation or qualification.
      To make the use of extensions safe and managable, there is a strict set of governance
      applied to the definition and use of extensions. Though any implementer can
      define an extension, there is a set of requirements that SHALL be met as part
      of the definition of the extension. Applications processing a resource are required
      to check for modifier extensions.  Modifier extensions SHALL NOT change the
      meaning of any elements on Resource or DomainResource (including cannot change
      the meaning of modifierExtension itself).
    element_property: true
    items:
      $ref: Extension.yaml
    title: Extensions that cannot be ignored even if unrecognized
    type: array
  preparation:
    description: Special processing that should be applied to the container for this
      kind of specimen.
    element_property: true
    pattern: \s*(\S|\s)*
    title: Special processing applied to the container for this specimen type
    type: string
  resourceType:
    const: SpecimenDefinitionTypeTestedContainer
    default: SpecimenDefinitionTypeTestedContainer
    description: One of the resource types defined as part of FHIR
    title: Resource Type
    type: string
  type:
    $ref: CodeableConcept.yaml
    binding_description: SCT descendants of 706041008 |Device for body fluid and tissue
      collection/transfer/processing (physical object)|
    binding_strength: example
    binding_uri: http://hl7.org/fhir/ValueSet/specimen-container-type
    binding_version: null
    description: The type of container used to contain this kind of specimen.
    element_property: true
    title: Kind of container associated with the kind of specimen
title: SpecimenDefinitionTypeTestedContainer
type: object

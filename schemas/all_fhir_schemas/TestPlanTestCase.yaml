$id: TestPlanTestCase
additionalProperties: false
description: The test cases that constitute this plan. The individual test cases that
  are part of this plan, when they they are made explicit. [See https://hl7.org/fhir/R5/TestPlanTestCase.html]
links:
- href: Reference/{id}
  rel: scope
  targetHints:
    backref:
    - scope_test_plan_test_case
    direction:
    - outbound
    multiplicity:
    - has_many
  targetSchema:
    $ref: Reference.yaml
  templatePointers:
    id: /scope/-/reference
  templateRequired:
  - id
- href: Reference/{id}
  rel: dependency_predecessor
  targetHints:
    backref:
    - test_plan_test_case_dependency
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Reference.yaml
  templatePointers:
    id: /dependency/-/predecessor/reference
  templateRequired:
  - id
- href: Reference/{id}
  rel: testData_content
  targetHints:
    backref:
    - test_plan_test_case_test_data
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Reference.yaml
  templatePointers:
    id: /testData/-/content/reference
  templateRequired:
  - id
- href: Reference/{id}
  rel: testData_sourceReference
  targetHints:
    backref:
    - test_plan_test_case_test_data
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Reference.yaml
  templatePointers:
    id: /testData/-/sourceReference/reference
  templateRequired:
  - id
properties:
  _sequence:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``sequence``.
  assertion:
    description: The test assertions - the expectations of test results from the execution
      of the test case.
    element_property: true
    items:
      $ref: TestPlanTestCaseAssertion.yaml
    title: Test assertions or expectations
    type: array
  dependency:
    description: The required criteria to execute the test case - e.g. preconditions,
      previous tests.
    element_property: true
    items:
      $ref: TestPlanTestCaseDependency.yaml
    title: Required criteria to execute the test case
    type: array
  extension:
    description: May be used to represent additional information that is not part
      of the basic definition of the element. To make the use of extensions safe and
      managable, there is a strict set of governance applied to the definition and
      use of extensions. Though any implementer can define an extension, there is
      a set of requirements that SHALL be met as part of the definition of the extension.
    element_property: true
    items:
      $ref: Extension.yaml
    title: Additional content defined by implementations
    type: array
  fhir_comments:
    anyOf:
    - type: string
    - items:
        type: string
      type: array
    element_property: false
    title: Fhir Comments
  id:
    description: Unique id for the element within a resource (for internal references).
      This may be any string value that does not contain spaces.
    element_property: true
    pattern: '[ \r\n\t\S]+'
    title: Unique id for inter-element referencing
    type: string
  links:
    links:
      items:
        $ref: https://json-schema.org/draft/2020-12/links.yaml
      type: array
  modifierExtension:
    description: May be used to represent additional information that is not part
      of the basic definition of the element and that modifies the understanding of
      the element in which it is contained and/or the understanding of the containing
      element's descendants. Usually modifier elements provide negation or qualification.
      To make the use of extensions safe and managable, there is a strict set of governance
      applied to the definition and use of extensions. Though any implementer can
      define an extension, there is a set of requirements that SHALL be met as part
      of the definition of the extension. Applications processing a resource are required
      to check for modifier extensions.  Modifier extensions SHALL NOT change the
      meaning of any elements on Resource or DomainResource (including cannot change
      the meaning of modifierExtension itself).
    element_property: true
    items:
      $ref: Extension.yaml
    title: Extensions that cannot be ignored even if unrecognized
    type: array
  resourceType:
    const: TestPlanTestCase
    default: TestPlanTestCase
    description: One of the resource types defined as part of FHIR
    title: Resource Type
    type: string
  scope:
    backref: scope_test_plan_test_case
    description: The scope or artifact covered by the case, when the individual test
      case is associated with a testable artifact.
    element_property: true
    enum_reference_types:
    - Reference
    items:
      $ref: Reference.yaml
    title: The scope or artifact covered by the case
    type: array
  sequence:
    description: Sequence of test case - an ordinal number that indicates the order
      for the present test case in the test plan.
    element_property: true
    title: Sequence of test case in the test plan
    type: integer
  testData:
    element_property: true
    items:
      $ref: TestPlanTestCaseTestData.yaml
    title: The test data used in the test case
    type: array
  testRun:
    element_property: true
    items:
      $ref: TestPlanTestCaseTestRun.yaml
    title: The actual test to be executed
    type: array
title: TestPlanTestCase
type: object

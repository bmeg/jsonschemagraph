$id: AuditEventEntity
additionalProperties: false
description: Data or objects used. Specific instances of data or objects that have
  been accessed. [See https://hl7.org/fhir/R5/AuditEventEntity.html] [See https://hl7.org/fhir/R5/AuditEventEntity.html]
links:
- href: Resource/{id}
  rel: what
  targetHints:
    backref:
    - audit_event_entity
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Resource.yaml
  templatePointers:
    id: /what/reference
  templateRequired:
  - id
- href: Location/{id}
  rel: agent_location
  targetHints:
    backref:
    - audit_event_agent
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Location.yaml
  templatePointers:
    id: /agent/-/location/reference
  templateRequired:
  - id
- href: Endpoint/{id}
  rel: agent_networkReference
  targetHints:
    backref:
    - audit_event_agent
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Endpoint.yaml
  templatePointers:
    id: /agent/-/networkReference/reference
  templateRequired:
  - id
- href: Practitioner/{id}
  rel: agent_who_Practitioner
  targetHints:
    backref:
    - audit_event_agent
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Practitioner.yaml
  templatePointers:
    id: /agent/-/who/reference
  templateRequired:
  - id
- href: PractitionerRole/{id}
  rel: agent_who_PractitionerRole
  targetHints:
    backref:
    - audit_event_agent
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: PractitionerRole.yaml
  templatePointers:
    id: /agent/-/who/reference
  templateRequired:
  - id
- href: Organization/{id}
  rel: agent_who_Organization
  targetHints:
    backref:
    - audit_event_agent
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Organization.yaml
  templatePointers:
    id: /agent/-/who/reference
  templateRequired:
  - id
- href: CareTeam/{id}
  rel: agent_who_CareTeam
  targetHints:
    backref:
    - audit_event_agent
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: CareTeam.yaml
  templatePointers:
    id: /agent/-/who/reference
  templateRequired:
  - id
- href: Patient/{id}
  rel: agent_who_Patient
  targetHints:
    backref:
    - audit_event_agent
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Patient.yaml
  templatePointers:
    id: /agent/-/who/reference
  templateRequired:
  - id
- href: Device/{id}
  rel: agent_who_Device
  targetHints:
    backref:
    - audit_event_agent
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Device.yaml
  templatePointers:
    id: /agent/-/who/reference
  templateRequired:
  - id
- href: RelatedPerson/{id}
  rel: agent_who_RelatedPerson
  targetHints:
    backref:
    - audit_event_agent
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: RelatedPerson.yaml
  templatePointers:
    id: /agent/-/who/reference
  templateRequired:
  - id
properties:
  _query:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``query``.
  agent:
    description: The entity is attributed to an agent to express the agent's responsibility
      for that entity in the activity. This is most used to indicate when persistence
      media (the entity) are used by an agent. For example when importing data from
      a device, the device would be described in an entity, and the user importing
      data from that media would be indicated as the entity.agent.
    element_property: true
    items:
      $ref: AuditEventAgent.yaml
    title: Entity is attributed to this agent
    type: array
  detail:
    description: Tagged value pairs for conveying additional information about the
      entity.
    element_property: true
    items:
      $ref: AuditEventEntityDetail.yaml
    title: Additional Information about the entity
    type: array
  extension:
    description: May be used to represent additional information that is not part
      of the basic definition of the element. To make the use of extensions safe and
      managable, there is a strict set of governance applied to the definition and
      use of extensions. Though any implementer can define an extension, there is
      a set of requirements that SHALL be met as part of the definition of the extension.
    element_property: true
    items:
      $ref: Extension.yaml
    title: Additional content defined by implementations
    type: array
  fhir_comments:
    anyOf:
    - type: string
    - items:
        type: string
      type: array
    element_property: false
    title: Fhir Comments
  id:
    description: Unique id for the element within a resource (for internal references).
      This may be any string value that does not contain spaces.
    element_property: true
    pattern: '[ \r\n\t\S]+'
    title: Unique id for inter-element referencing
    type: string
  links:
    links:
      items:
        $ref: https://json-schema.org/draft/2020-12/links.yaml
      type: array
  modifierExtension:
    description: May be used to represent additional information that is not part
      of the basic definition of the element and that modifies the understanding of
      the element in which it is contained and/or the understanding of the containing
      element's descendants. Usually modifier elements provide negation or qualification.
      To make the use of extensions safe and managable, there is a strict set of governance
      applied to the definition and use of extensions. Though any implementer can
      define an extension, there is a set of requirements that SHALL be met as part
      of the definition of the extension. Applications processing a resource are required
      to check for modifier extensions.  Modifier extensions SHALL NOT change the
      meaning of any elements on Resource or DomainResource (including cannot change
      the meaning of modifierExtension itself).
    element_property: true
    items:
      $ref: Extension.yaml
    title: Extensions that cannot be ignored even if unrecognized
    type: array
  query:
    description: The query parameters for a query-type entities.
    element_property: true
    format: binary
    title: Query parameters
    type: string
  resourceType:
    const: AuditEventEntity
    default: AuditEventEntity
    description: One of the resource types defined as part of FHIR
    title: Resource Type
    type: string
  role:
    $ref: CodeableConcept.yaml
    binding_description: DICOM Audit Event Entity Role
    binding_strength: example
    binding_uri: http://hl7.org/fhir/ValueSet/object-role
    binding_version: null
    description: Code representing the role the entity played in the event being audited.
    element_property: true
    title: What role the entity played
  securityLabel:
    binding_description: Example Security Labels from the Healthcare Privacy and Security
      Classification System.
    binding_strength: example
    binding_uri: http://hl7.org/fhir/ValueSet/security-label-examples
    binding_version: null
    description: Security labels for the identified entity.
    element_property: true
    items:
      $ref: CodeableConcept.yaml
    title: Security labels on the entity
    type: array
  what:
    $ref: Reference.yaml
    backref: audit_event_entity
    description: Identifies a specific instance of the entity. The reference should
      be version specific. This is allowed to be a Parameters resource.
    element_property: true
    enum_reference_types:
    - Resource
    title: Specific instance of resource
title: AuditEventEntity
type: object

$id: DeviceDispense
additionalProperties: false
description: A record of dispensation of a device. A record of dispensation of a device
  - i.e., assigning a device to a patient, or to a professional for their use. [See
  https://hl7.org/fhir/R5/DeviceDispense.html]
links:
- href: CarePlan/{id}
  rel: basedOn_CarePlan
  targetHints:
    backref:
    - basedOn_device_dispense
    direction:
    - outbound
    multiplicity:
    - has_many
  targetSchema:
    $ref: CarePlan.yaml
  templatePointers:
    id: /basedOn/-/reference
  templateRequired:
  - id
- href: DeviceRequest/{id}
  rel: basedOn_DeviceRequest
  targetHints:
    backref:
    - basedOn_device_dispense
    direction:
    - outbound
    multiplicity:
    - has_many
  targetSchema:
    $ref: DeviceRequest.yaml
  templatePointers:
    id: /basedOn/-/reference
  templateRequired:
  - id
- href: Location/{id}
  rel: destination
  targetHints:
    backref:
    - destination_device_dispense
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Location.yaml
  templatePointers:
    id: /destination/reference
  templateRequired:
  - id
- href: Encounter/{id}
  rel: encounter
  targetHints:
    backref:
    - device_dispense
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Encounter.yaml
  templatePointers:
    id: /encounter/reference
  templateRequired:
  - id
- href: Provenance/{id}
  rel: eventHistory
  targetHints:
    backref:
    - eventHistory_device_dispense
    direction:
    - outbound
    multiplicity:
    - has_many
  targetSchema:
    $ref: Provenance.yaml
  templatePointers:
    id: /eventHistory/-/reference
  templateRequired:
  - id
- href: Location/{id}
  rel: location
  targetHints:
    backref:
    - location_device_dispense
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Location.yaml
  templatePointers:
    id: /location/reference
  templateRequired:
  - id
- href: Procedure/{id}
  rel: partOf
  targetHints:
    backref:
    - partOf_device_dispense
    direction:
    - outbound
    multiplicity:
    - has_many
  targetSchema:
    $ref: Procedure.yaml
  templatePointers:
    id: /partOf/-/reference
  templateRequired:
  - id
- href: Patient/{id}
  rel: receiver_Patient
  targetHints:
    backref:
    - receiver_device_dispense
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Patient.yaml
  templatePointers:
    id: /receiver/reference
  templateRequired:
  - id
- href: Practitioner/{id}
  rel: receiver_Practitioner
  targetHints:
    backref:
    - receiver_device_dispense
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Practitioner.yaml
  templatePointers:
    id: /receiver/reference
  templateRequired:
  - id
- href: RelatedPerson/{id}
  rel: receiver_RelatedPerson
  targetHints:
    backref:
    - receiver_device_dispense
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: RelatedPerson.yaml
  templatePointers:
    id: /receiver/reference
  templateRequired:
  - id
- href: Location/{id}
  rel: receiver_Location
  targetHints:
    backref:
    - receiver_device_dispense
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Location.yaml
  templatePointers:
    id: /receiver/reference
  templateRequired:
  - id
- href: PractitionerRole/{id}
  rel: receiver_PractitionerRole
  targetHints:
    backref:
    - receiver_device_dispense
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: PractitionerRole.yaml
  templatePointers:
    id: /receiver/reference
  templateRequired:
  - id
- href: Patient/{id}
  rel: subject_Patient
  targetHints:
    backref:
    - subject_device_dispense
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Patient.yaml
  templatePointers:
    id: /subject/reference
  templateRequired:
  - id
- href: Practitioner/{id}
  rel: subject_Practitioner
  targetHints:
    backref:
    - subject_device_dispense
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Practitioner.yaml
  templatePointers:
    id: /subject/reference
  templateRequired:
  - id
- href: Resource/{id}
  rel: supportingInformation
  targetHints:
    backref:
    - supportingInformation_device_dispense
    direction:
    - outbound
    multiplicity:
    - has_many
  targetSchema:
    $ref: Resource.yaml
  templatePointers:
    id: /supportingInformation/-/reference
  templateRequired:
  - id
- href: Reference/{id}
  rel: device_reference
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Reference.yaml
  templatePointers:
    id: /device/reference/reference
  templateRequired:
  - id
- href: Practitioner/{id}
  rel: note_authorReference_Practitioner
  targetHints:
    backref:
    - annotation
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Practitioner.yaml
  templatePointers:
    id: /note/-/authorReference/reference
  templateRequired:
  - id
- href: PractitionerRole/{id}
  rel: note_authorReference_PractitionerRole
  targetHints:
    backref:
    - annotation
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: PractitionerRole.yaml
  templatePointers:
    id: /note/-/authorReference/reference
  templateRequired:
  - id
- href: Patient/{id}
  rel: note_authorReference_Patient
  targetHints:
    backref:
    - annotation
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Patient.yaml
  templatePointers:
    id: /note/-/authorReference/reference
  templateRequired:
  - id
- href: RelatedPerson/{id}
  rel: note_authorReference_RelatedPerson
  targetHints:
    backref:
    - annotation
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: RelatedPerson.yaml
  templatePointers:
    id: /note/-/authorReference/reference
  templateRequired:
  - id
- href: Organization/{id}
  rel: note_authorReference_Organization
  targetHints:
    backref:
    - annotation
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Organization.yaml
  templatePointers:
    id: /note/-/authorReference/reference
  templateRequired:
  - id
- href: Practitioner/{id}
  rel: performer_actor_Practitioner
  targetHints:
    backref:
    - device_dispense_performer
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Practitioner.yaml
  templatePointers:
    id: /performer/-/actor/reference
  templateRequired:
  - id
- href: PractitionerRole/{id}
  rel: performer_actor_PractitionerRole
  targetHints:
    backref:
    - device_dispense_performer
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: PractitionerRole.yaml
  templatePointers:
    id: /performer/-/actor/reference
  templateRequired:
  - id
- href: Organization/{id}
  rel: performer_actor_Organization
  targetHints:
    backref:
    - device_dispense_performer
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Organization.yaml
  templatePointers:
    id: /performer/-/actor/reference
  templateRequired:
  - id
- href: Patient/{id}
  rel: performer_actor_Patient
  targetHints:
    backref:
    - device_dispense_performer
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Patient.yaml
  templatePointers:
    id: /performer/-/actor/reference
  templateRequired:
  - id
- href: Device/{id}
  rel: performer_actor_Device
  targetHints:
    backref:
    - device_dispense_performer
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Device.yaml
  templatePointers:
    id: /performer/-/actor/reference
  templateRequired:
  - id
- href: RelatedPerson/{id}
  rel: performer_actor_RelatedPerson
  targetHints:
    backref:
    - device_dispense_performer
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: RelatedPerson.yaml
  templatePointers:
    id: /performer/-/actor/reference
  templateRequired:
  - id
- href: CareTeam/{id}
  rel: performer_actor_CareTeam
  targetHints:
    backref:
    - device_dispense_performer
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: CareTeam.yaml
  templatePointers:
    id: /performer/-/actor/reference
  templateRequired:
  - id
- href: Reference/{id}
  rel: statusReason_reference
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Reference.yaml
  templatePointers:
    id: /statusReason/reference/reference
  templateRequired:
  - id
properties:
  _implicitRules:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``implicitRules``.
  _language:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``language``.
  _preparedDate:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``preparedDate``.
  _status:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``status``.
  _usageInstruction:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``usageInstruction``.
  _whenHandedOver:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``whenHandedOver``.
  basedOn:
    backref: basedOn_device_dispense
    element_property: true
    enum_reference_types:
    - CarePlan
    - DeviceRequest
    items:
      $ref: Reference.yaml
    title: The order or request that this dispense is fulfilling
    type: array
  category:
    description: Indicates the type of device dispense.
    element_property: true
    items:
      $ref: CodeableConcept.yaml
    title: Type of device dispense
    type: array
  contained:
    description: These resources do not have an independent existence apart from the
      resource that contains them - they cannot be identified independently, nor can
      they have their own independent transaction scope. This is allowed to be a Parameters
      resource if and only if it is referenced by a resource that provides context/meaning.
    element_property: true
    items:
      $ref: Resource.yaml
    title: Contained, inline Resources
    type: array
  destination:
    $ref: Reference.yaml
    backref: destination_device_dispense
    description: Identification of the facility/location where the device was /should
      be shipped to, as part of the dispense process.
    element_property: true
    enum_reference_types:
    - Location
    title: Where the device was sent or should be sent
  device:
    $ref: CodeableReference.yaml
    backref: device_dispense
    description: Identifies the device being dispensed. This is either a link to a
      resource representing the details of the device or a simple attribute carrying
      a code that identifies the device from a known list of devices.
    element_property: true
    enum_reference_types:
    - Device
    - DeviceDefinition
    title: What device was supplied
  encounter:
    $ref: Reference.yaml
    backref: device_dispense
    description: The encounter that establishes the context for this event.
    element_property: true
    enum_reference_types:
    - Encounter
    title: Encounter associated with event
  eventHistory:
    backref: eventHistory_device_dispense
    description: A summary of the events of interest that have occurred, such as when
      the dispense was verified.
    element_property: true
    enum_reference_types:
    - Provenance
    items:
      $ref: Reference.yaml
    title: A list of relevant lifecycle events
    type: array
  extension:
    description: May be used to represent additional information that is not part
      of the basic definition of the resource. To make the use of extensions safe
      and managable, there is a strict set of governance applied to the definition
      and use of extensions. Though any implementer can define an extension, there
      is a set of requirements that SHALL be met as part of the definition of the
      extension.
    element_property: true
    items:
      $ref: Extension.yaml
    title: Additional content defined by implementations
    type: array
  fhir_comments:
    anyOf:
    - type: string
    - items:
        type: string
      type: array
    element_property: false
    title: Fhir Comments
  id:
    description: The logical id of the resource, as used in the URL for the resource.
      Once assigned, this value never changes.
    element_property: true
    maxLength: 64
    minLength: 1
    pattern: ^[A-Za-z0-9\-.]+$
    title: Logical id of this artifact
    type: string
  identifier:
    element_property: true
    items:
      $ref: Identifier.yaml
    title: Business identifier for this dispensation
    type: array
  implicitRules:
    description: A reference to a set of rules that were followed when the resource
      was constructed, and which must be understood when processing the content. Often,
      this is a reference to an implementation guide that defines the special rules
      along with other profiles etc.
    element_property: true
    pattern: \S*
    title: A set of rules under which this content was created
    type: string
  language:
    binding_description: IETF language tag for a human language
    binding_strength: required
    binding_uri: http://hl7.org/fhir/ValueSet/all-languages
    binding_version: 5.0.0
    description: The base language in which the resource is written.
    element_property: true
    pattern: ^[^\s]+(\s[^\s]+)*$
    title: Language of the resource content
    type: string
  links:
    links:
      items:
        $ref: https://json-schema.org/draft/2020-12/links.yaml
      type: array
  location:
    $ref: Reference.yaml
    backref: location_device_dispense
    description: The principal physical location where the dispense was performed.
    element_property: true
    enum_reference_types:
    - Location
    title: Where the dispense occurred
  meta:
    $ref: Meta.yaml
    description: The metadata about the resource. This is content that is maintained
      by the infrastructure. Changes to the content might not always be associated
      with version changes to the resource.
    element_property: true
    title: Metadata about the resource
  modifierExtension:
    description: May be used to represent additional information that is not part
      of the basic definition of the resource and that modifies the understanding
      of the element that contains it and/or the understanding of the containing element's
      descendants. Usually modifier elements provide negation or qualification. To
      make the use of extensions safe and managable, there is a strict set of governance
      applied to the definition and use of extensions. Though any implementer is allowed
      to define an extension, there is a set of requirements that SHALL be met as
      part of the definition of the extension. Applications processing a resource
      are required to check for modifier extensions.  Modifier extensions SHALL NOT
      change the meaning of any elements on Resource or DomainResource (including
      cannot change the meaning of modifierExtension itself).
    element_property: true
    items:
      $ref: Extension.yaml
    title: Extensions that cannot be ignored
    type: array
  note:
    description: Extra information about the dispense that could not be conveyed in
      the other attributes.
    element_property: true
    items:
      $ref: Annotation.yaml
    title: Information about the dispense
    type: array
  partOf:
    backref: partOf_device_dispense
    element_property: true
    enum_reference_types:
    - Procedure
    items:
      $ref: Reference.yaml
    title: The bigger event that this dispense is a part of
    type: array
  performer:
    description: Indicates who or what performed the event.
    element_property: true
    items:
      $ref: DeviceDispensePerformer.yaml
    title: Who performed event
    type: array
  preparedDate:
    description: The time when the dispensed product was packaged and reviewed.
    element_property: true
    format: date-time
    title: When product was packaged and reviewed
    type: string
  quantity:
    $ref: Quantity.yaml
    description: The number of devices that have been dispensed.
    element_property: true
    title: Amount dispensed
  receiver:
    $ref: Reference.yaml
    backref: receiver_device_dispense
    description: Identifies the person who picked up the device or the person or location
      where the device was delivered.  This may be a patient or their caregiver, but
      some cases exist where it can be a healthcare professional or a location.
    element_property: true
    enum_reference_types:
    - Patient
    - Practitioner
    - RelatedPerson
    - Location
    - PractitionerRole
    title: Who collected the device or where the medication was delivered
  resourceType:
    const: DeviceDispense
    default: DeviceDispense
    description: One of the resource types defined as part of FHIR
    title: Resource Type
    type: string
  status:
    binding_description: Describes the lifecycle of the dispense.
    binding_strength: required
    binding_uri: http://hl7.org/fhir/ValueSet/devicedispense-status
    binding_version: 5.0.0
    description: A code specifying the state of the set of dispense events.
    element_property: true
    element_required: true
    enum_values:
    - preparation
    - in-progress
    - cancelled
    - on-hold
    - completed
    - entered-in-error
    - stopped
    - declined
    - unknown
    pattern: ^[^\s]+(\s[^\s]+)*$
    title: preparation | in-progress | cancelled | on-hold | completed | entered-in-error
      | stopped | declined | unknown
    type: string
  statusReason:
    $ref: CodeableReference.yaml
    backref: device_dispense
    binding_description: A code describing why a dispense was or was not performed.
    binding_strength: example
    binding_uri: http://hl7.org/fhir/ValueSet/devicedispense-status-reason
    binding_version: null
    description: Indicates the reason why a dispense was or was not performed.
    element_property: true
    enum_reference_types:
    - DetectedIssue
    title: Why a dispense was or was not performed
  subject:
    $ref: Reference.yaml
    backref: subject_device_dispense
    description: A link to a resource representing the person to whom the device is
      intended.
    element_property: true
    enum_reference_types:
    - Patient
    - Practitioner
    title: Who the dispense is for
  supportingInformation:
    backref: supportingInformation_device_dispense
    description: Additional information that supports the device being dispensed.
    element_property: true
    enum_reference_types:
    - Resource
    items:
      $ref: Reference.yaml
    title: Information that supports the dispensing of the device
    type: array
  text:
    $ref: Narrative.yaml
    description: A human-readable narrative that contains a summary of the resource
      and can be used to represent the content of the resource to a human. The narrative
      need not encode all the structured data, but is required to contain sufficient
      detail to make it "clinically safe" for a human to just read the narrative.
      Resource definitions may define what content should be represented in the narrative
      to ensure clinical safety.
    element_property: true
    title: Text summary of the resource, for human interpretation
  type:
    $ref: CodeableConcept.yaml
    description: Indicates the type of dispensing event that is performed.
    element_property: true
    title: Trial fill, partial fill, emergency fill, etc
  usageInstruction:
    description: The full representation of the instructions.
    element_property: true
    pattern: \s*(\S|\s)*
    title: Full representation of the usage instructions
    type: string
  whenHandedOver:
    description: The time the dispensed product was made available to the patient
      or their representative.
    element_property: true
    format: date-time
    title: When product was given out
    type: string
required:
- device
- subject
title: DeviceDispense
type: object

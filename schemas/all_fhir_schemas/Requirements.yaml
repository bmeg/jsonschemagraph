$id: Requirements
additionalProperties: false
description: A set of requirements - features of systems that are necessary. A set
  of requirements - a list of features or behaviors of designed systems that are necessary
  to achieve organizational or regulatory goals. [See https://hl7.org/fhir/R5/Requirements.html]
links:
- href: CareTeam/{id}
  rel: statement_source_CareTeam
  targetHints:
    backref:
    - source_requirements_statement
    direction:
    - outbound
    multiplicity:
    - has_many
  targetSchema:
    $ref: CareTeam.yaml
  templatePointers:
    id: /statement/-/source/-/reference
  templateRequired:
  - id
- href: Device/{id}
  rel: statement_source_Device
  targetHints:
    backref:
    - source_requirements_statement
    direction:
    - outbound
    multiplicity:
    - has_many
  targetSchema:
    $ref: Device.yaml
  templatePointers:
    id: /statement/-/source/-/reference
  templateRequired:
  - id
- href: Group/{id}
  rel: statement_source_Group
  targetHints:
    backref:
    - source_requirements_statement
    direction:
    - outbound
    multiplicity:
    - has_many
  targetSchema:
    $ref: Group.yaml
  templatePointers:
    id: /statement/-/source/-/reference
  templateRequired:
  - id
- href: HealthcareService/{id}
  rel: statement_source_HealthcareService
  targetHints:
    backref:
    - source_requirements_statement
    direction:
    - outbound
    multiplicity:
    - has_many
  targetSchema:
    $ref: HealthcareService.yaml
  templatePointers:
    id: /statement/-/source/-/reference
  templateRequired:
  - id
- href: Organization/{id}
  rel: statement_source_Organization
  targetHints:
    backref:
    - source_requirements_statement
    direction:
    - outbound
    multiplicity:
    - has_many
  targetSchema:
    $ref: Organization.yaml
  templatePointers:
    id: /statement/-/source/-/reference
  templateRequired:
  - id
- href: Patient/{id}
  rel: statement_source_Patient
  targetHints:
    backref:
    - source_requirements_statement
    direction:
    - outbound
    multiplicity:
    - has_many
  targetSchema:
    $ref: Patient.yaml
  templatePointers:
    id: /statement/-/source/-/reference
  templateRequired:
  - id
- href: Practitioner/{id}
  rel: statement_source_Practitioner
  targetHints:
    backref:
    - source_requirements_statement
    direction:
    - outbound
    multiplicity:
    - has_many
  targetSchema:
    $ref: Practitioner.yaml
  templatePointers:
    id: /statement/-/source/-/reference
  templateRequired:
  - id
- href: PractitionerRole/{id}
  rel: statement_source_PractitionerRole
  targetHints:
    backref:
    - source_requirements_statement
    direction:
    - outbound
    multiplicity:
    - has_many
  targetSchema:
    $ref: PractitionerRole.yaml
  templatePointers:
    id: /statement/-/source/-/reference
  templateRequired:
  - id
- href: RelatedPerson/{id}
  rel: statement_source_RelatedPerson
  targetHints:
    backref:
    - source_requirements_statement
    direction:
    - outbound
    multiplicity:
    - has_many
  targetSchema:
    $ref: RelatedPerson.yaml
  templatePointers:
    id: /statement/-/source/-/reference
  templateRequired:
  - id
- href: PlanDefinition/{id}
  rel: useContext_valueReference_PlanDefinition
  targetHints:
    backref:
    - usage_context
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: PlanDefinition.yaml
  templatePointers:
    id: /useContext/-/valueReference/reference
  templateRequired:
  - id
- href: ResearchStudy/{id}
  rel: useContext_valueReference_ResearchStudy
  targetHints:
    backref:
    - usage_context
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: ResearchStudy.yaml
  templatePointers:
    id: /useContext/-/valueReference/reference
  templateRequired:
  - id
- href: InsurancePlan/{id}
  rel: useContext_valueReference_InsurancePlan
  targetHints:
    backref:
    - usage_context
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: InsurancePlan.yaml
  templatePointers:
    id: /useContext/-/valueReference/reference
  templateRequired:
  - id
- href: HealthcareService/{id}
  rel: useContext_valueReference_HealthcareService
  targetHints:
    backref:
    - usage_context
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: HealthcareService.yaml
  templatePointers:
    id: /useContext/-/valueReference/reference
  templateRequired:
  - id
- href: Group/{id}
  rel: useContext_valueReference_Group
  targetHints:
    backref:
    - usage_context
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Group.yaml
  templatePointers:
    id: /useContext/-/valueReference/reference
  templateRequired:
  - id
- href: Location/{id}
  rel: useContext_valueReference_Location
  targetHints:
    backref:
    - usage_context
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Location.yaml
  templatePointers:
    id: /useContext/-/valueReference/reference
  templateRequired:
  - id
- href: Organization/{id}
  rel: useContext_valueReference_Organization
  targetHints:
    backref:
    - usage_context
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Organization.yaml
  templatePointers:
    id: /useContext/-/valueReference/reference
  templateRequired:
  - id
properties:
  _actor:
    items:
      $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``actor``.
    type: array
  _copyright:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``copyright``.
  _copyrightLabel:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``copyrightLabel``.
  _date:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``date``.
  _derivedFrom:
    items:
      $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``derivedFrom``.
    type: array
  _description:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``description``.
  _experimental:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``experimental``.
  _implicitRules:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``implicitRules``.
  _language:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``language``.
  _name:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``name``.
  _publisher:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``publisher``.
  _purpose:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``purpose``.
  _reference:
    items:
      $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``reference``.
    type: array
  _status:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``status``.
  _title:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``title``.
  _url:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``url``.
  _version:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``version``.
  _versionAlgorithmString:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``versionAlgorithmString``.
  actor:
    description: An actor these requirements are in regard to.
    element_property: true
    enum_reference_types:
    - ActorDefinition
    items:
      pattern: \S*
      type: string
    title: Actor for these requirements
    type: array
  contact:
    description: Contact details to assist a user in finding and communicating with
      the publisher.
    element_property: true
    items:
      $ref: ContactDetail.yaml
    title: Contact details for the publisher
    type: array
  contained:
    description: These resources do not have an independent existence apart from the
      resource that contains them - they cannot be identified independently, nor can
      they have their own independent transaction scope. This is allowed to be a Parameters
      resource if and only if it is referenced by a resource that provides context/meaning.
    element_property: true
    items:
      $ref: Resource.yaml
    title: Contained, inline Resources
    type: array
  copyright:
    description: A copyright statement relating to the Requirements and/or its contents.
      Copyright statements are generally legal restrictions on the use and publishing
      of the Requirements.
    element_property: true
    pattern: \s*(\S|\s)*
    title: Use and/or publishing restrictions
    type: string
  copyrightLabel:
    description: A short string (<50 characters), suitable for inclusion in a page
      footer that identifies the copyright holder, effective period, and optionally
      whether rights are resctricted. (e.g. 'All rights reserved', 'Some rights reserved').
    element_property: true
    pattern: '[ \r\n\t\S]+'
    title: Copyright holder and year(s)
    type: string
  date:
    description: The date  (and optionally time) when the Requirements was published.
      The date must change when the business version changes and it must change if
      the status code changes. In addition, it should change when the substantive
      content of the Requirements changes.
    element_property: true
    format: date-time
    title: Date last changed
    type: string
  derivedFrom:
    description: Another set of Requirements that this set of Requirements builds
      on and updates.
    element_property: true
    enum_reference_types:
    - Requirements
    items:
      pattern: \S*
      type: string
    title: Other set of Requirements this builds on
    type: array
  description:
    description: A free text natural language description of the requirements.
    element_property: true
    pattern: \s*(\S|\s)*
    title: Natural language description of the requirements
    type: string
  experimental:
    description: A Boolean value to indicate that this Requirements is authored for
      testing purposes (or education/evaluation/marketing) and is not intended to
      be used for genuine usage.
    element_property: true
    title: For testing purposes, not real usage
    type: boolean
  extension:
    description: May be used to represent additional information that is not part
      of the basic definition of the resource. To make the use of extensions safe
      and managable, there is a strict set of governance applied to the definition
      and use of extensions. Though any implementer can define an extension, there
      is a set of requirements that SHALL be met as part of the definition of the
      extension.
    element_property: true
    items:
      $ref: Extension.yaml
    title: Additional content defined by implementations
    type: array
  fhir_comments:
    anyOf:
    - type: string
    - items:
        type: string
      type: array
    element_property: false
    title: Fhir Comments
  id:
    description: The logical id of the resource, as used in the URL for the resource.
      Once assigned, this value never changes.
    element_property: true
    maxLength: 64
    minLength: 1
    pattern: ^[A-Za-z0-9\-.]+$
    title: Logical id of this artifact
    type: string
  identifier:
    description: A formal identifier that is used to identify this Requirements when
      it is represented in other formats, or referenced in a specification, model,
      design or an instance.
    element_property: true
    items:
      $ref: Identifier.yaml
    title: Additional identifier for the Requirements (business identifier)
    type: array
  implicitRules:
    description: A reference to a set of rules that were followed when the resource
      was constructed, and which must be understood when processing the content. Often,
      this is a reference to an implementation guide that defines the special rules
      along with other profiles etc.
    element_property: true
    pattern: \S*
    title: A set of rules under which this content was created
    type: string
  jurisdiction:
    binding_description: Countries and regions within which this artifact is targeted
      for use.
    binding_strength: extensible
    binding_uri: http://hl7.org/fhir/ValueSet/jurisdiction
    binding_version: null
    description: A legal or geographic region in which the Requirements is intended
      to be used.
    element_property: true
    items:
      $ref: CodeableConcept.yaml
    title: Intended jurisdiction for Requirements (if applicable)
    type: array
  language:
    binding_description: IETF language tag for a human language
    binding_strength: required
    binding_uri: http://hl7.org/fhir/ValueSet/all-languages
    binding_version: 5.0.0
    description: The base language in which the resource is written.
    element_property: true
    pattern: ^[^\s]+(\s[^\s]+)*$
    title: Language of the resource content
    type: string
  links:
    links:
      items:
        $ref: https://json-schema.org/draft/2020-12/links.yaml
      type: array
  meta:
    $ref: Meta.yaml
    description: The metadata about the resource. This is content that is maintained
      by the infrastructure. Changes to the content might not always be associated
      with version changes to the resource.
    element_property: true
    title: Metadata about the resource
  modifierExtension:
    description: May be used to represent additional information that is not part
      of the basic definition of the resource and that modifies the understanding
      of the element that contains it and/or the understanding of the containing element's
      descendants. Usually modifier elements provide negation or qualification. To
      make the use of extensions safe and managable, there is a strict set of governance
      applied to the definition and use of extensions. Though any implementer is allowed
      to define an extension, there is a set of requirements that SHALL be met as
      part of the definition of the extension. Applications processing a resource
      are required to check for modifier extensions.  Modifier extensions SHALL NOT
      change the meaning of any elements on Resource or DomainResource (including
      cannot change the meaning of modifierExtension itself).
    element_property: true
    items:
      $ref: Extension.yaml
    title: Extensions that cannot be ignored
    type: array
  name:
    description: A natural language name identifying the Requirements. This name should
      be usable as an identifier for the module by machine processing applications
      such as code generation.
    element_property: true
    pattern: '[ \r\n\t\S]+'
    title: Name for this Requirements (computer friendly)
    type: string
  publisher:
    description: The name of the organization or individual responsible for the release
      and ongoing maintenance of the Requirements.
    element_property: true
    pattern: '[ \r\n\t\S]+'
    title: Name of the publisher/steward (organization or individual)
    type: string
  purpose:
    description: Explanation of why this Requirements is needed and why it has been
      designed as it has.
    element_property: true
    pattern: \s*(\S|\s)*
    title: Why this Requirements is defined
    type: string
  reference:
    description: A reference to another artifact that created this set of requirements.
      This could be a Profile, etc., or external regulation, or business requirements
      expressed elsewhere.
    element_property: true
    items:
      format: uri
      maxLength: 65536
      minLength: 1
      type: string
    title: External artifact (rule/document etc. that) created this set of requirements
    type: array
  resourceType:
    const: Requirements
    default: Requirements
    description: One of the resource types defined as part of FHIR
    title: Resource Type
    type: string
  statement:
    description: The actual statement of requirement, in markdown format.
    element_property: true
    items:
      $ref: RequirementsStatement.yaml
    title: Actual statement as markdown
    type: array
  status:
    binding_description: The lifecycle status of an artifact.
    binding_strength: required
    binding_uri: http://hl7.org/fhir/ValueSet/publication-status
    binding_version: 5.0.0
    description: The status of this Requirements. Enables tracking the life-cycle
      of the content.
    element_property: true
    element_required: true
    enum_values:
    - draft
    - active
    - retired
    - unknown
    pattern: ^[^\s]+(\s[^\s]+)*$
    title: draft | active | retired | unknown
    type: string
  text:
    $ref: Narrative.yaml
    description: A human-readable narrative that contains a summary of the resource
      and can be used to represent the content of the resource to a human. The narrative
      need not encode all the structured data, but is required to contain sufficient
      detail to make it "clinically safe" for a human to just read the narrative.
      Resource definitions may define what content should be represented in the narrative
      to ensure clinical safety.
    element_property: true
    title: Text summary of the resource, for human interpretation
  title:
    description: A short, descriptive, user-friendly title for the Requirements.
    element_property: true
    pattern: '[ \r\n\t\S]+'
    title: Name for this Requirements (human friendly)
    type: string
  url:
    description: An absolute URI that is used to identify this Requirements when it
      is referenced in a specification, model, design or an instance; also called
      its canonical identifier. This SHOULD be globally unique and SHOULD be a literal
      address at which an authoritative instance of this Requirements is (or will
      be) published. This URL can be the target of a canonical reference. It SHALL
      remain the same when the Requirements is stored on different servers.
    element_property: true
    pattern: \S*
    title: Canonical identifier for this Requirements, represented as a URI (globally
      unique)
    type: string
  useContext:
    description: The content was developed with a focus and intent of supporting the
      contexts that are listed. These contexts may be general categories (gender,
      age, ...) or may be references to specific programs (insurance plans, studies,
      ...) and may be used to assist with indexing and searching for appropriate Requirements
      instances.
    element_property: true
    items:
      $ref: UsageContext.yaml
    title: The context that the content is intended to support
    type: array
  version:
    description: The identifier that is used to identify this version of the Requirements
      when it is referenced in a specification, model, design or instance. This is
      an arbitrary value managed by the Requirements author and is not expected to
      be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if
      a managed version is not available. There is also no expectation that versions
      can be placed in a lexicographical sequence.
    element_property: true
    pattern: '[ \r\n\t\S]+'
    title: Business version of the Requirements
    type: string
  versionAlgorithmCoding:
    $ref: Coding.yaml
    description: Indicates the mechanism used to compare versions to determine which
      is more current.
    element_property: true
    one_of_many: versionAlgorithm
    one_of_many_required: false
    title: How to compare versions
  versionAlgorithmString:
    description: Indicates the mechanism used to compare versions to determine which
      is more current.
    element_property: true
    one_of_many: versionAlgorithm
    one_of_many_required: false
    pattern: '[ \r\n\t\S]+'
    title: How to compare versions
    type: string
title: Requirements
type: object

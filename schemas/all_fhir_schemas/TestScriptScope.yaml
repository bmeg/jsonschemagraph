$id: TestScriptScope
additionalProperties: false
description: Indication of the artifact(s) that are tested by this test case. The
  scope indicates a conformance artifact that is tested by the test(s) within this
  test case and the expectation of the test outcome(s) as well as the intended test
  phase inclusion. [See https://hl7.org/fhir/R5/TestScriptScope.html]
links: []
properties:
  _artifact:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``artifact``.
  artifact:
    description: The specific conformance artifact being tested. The canonical reference
      can be version-specific.
    element_property: true
    element_required: true
    enum_reference_types:
    - Resource
    pattern: \S*
    title: The specific conformance artifact being tested
    type: string
  conformance:
    $ref: CodeableConcept.yaml
    binding_description: The expectation of whether the test must pass for the system
      to be considered conformant with the artifact.
    binding_strength: extensible
    binding_uri: http://hl7.org/fhir/ValueSet/testscript-scope-conformance-codes
    binding_version: null
    description: 'The expectation of whether the test must pass for the system to
      be considered conformant with the artifact: required - all tests are expected
      to pass, optional - all test are expected to pass but non-pass status may be
      allowed, strict - all tests are expected to pass and warnings are treated as
      a failure.'
    element_property: true
    title: required | optional | strict
  extension:
    description: May be used to represent additional information that is not part
      of the basic definition of the element. To make the use of extensions safe and
      managable, there is a strict set of governance applied to the definition and
      use of extensions. Though any implementer can define an extension, there is
      a set of requirements that SHALL be met as part of the definition of the extension.
    element_property: true
    items:
      $ref: Extension.yaml
    title: Additional content defined by implementations
    type: array
  fhir_comments:
    anyOf:
    - type: string
    - items:
        type: string
      type: array
    element_property: false
    title: Fhir Comments
  id:
    description: Unique id for the element within a resource (for internal references).
      This may be any string value that does not contain spaces.
    element_property: true
    pattern: '[ \r\n\t\S]+'
    title: Unique id for inter-element referencing
    type: string
  links:
    links:
      items:
        $ref: https://json-schema.org/draft/2020-12/links.yaml
      type: array
  modifierExtension:
    description: May be used to represent additional information that is not part
      of the basic definition of the element and that modifies the understanding of
      the element in which it is contained and/or the understanding of the containing
      element's descendants. Usually modifier elements provide negation or qualification.
      To make the use of extensions safe and managable, there is a strict set of governance
      applied to the definition and use of extensions. Though any implementer can
      define an extension, there is a set of requirements that SHALL be met as part
      of the definition of the extension. Applications processing a resource are required
      to check for modifier extensions.  Modifier extensions SHALL NOT change the
      meaning of any elements on Resource or DomainResource (including cannot change
      the meaning of modifierExtension itself).
    element_property: true
    items:
      $ref: Extension.yaml
    title: Extensions that cannot be ignored even if unrecognized
    type: array
  phase:
    $ref: CodeableConcept.yaml
    binding_description: The phase of testing for this artifact.
    binding_strength: extensible
    binding_uri: http://hl7.org/fhir/ValueSet/testscript-scope-phase-codes
    binding_version: null
    description: 'The phase of testing for this artifact: unit - development / implementation
      phase, integration - internal system to system phase, production - live system
      to system phase (Note, this may involve pii/phi data).'
    element_property: true
    title: unit | integration | production
  resourceType:
    const: TestScriptScope
    default: TestScriptScope
    description: One of the resource types defined as part of FHIR
    title: Resource Type
    type: string
title: TestScriptScope
type: object

$id: TestScriptVariable
additionalProperties: false
description: Placeholder for evaluated elements. Variable is set based either on element
  value in response body or on header field value in the response headers. [See https://hl7.org/fhir/R5/TestScriptVariable.html]
links: []
properties:
  _defaultValue:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``defaultValue``.
  _description:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``description``.
  _expression:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``expression``.
  _headerField:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``headerField``.
  _hint:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``hint``.
  _name:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``name``.
  _path:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``path``.
  _sourceId:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``sourceId``.
  defaultValue:
    description: A default, hard-coded, or user-defined value for this variable.
    element_property: true
    pattern: '[ \r\n\t\S]+'
    title: Default, hard-coded, or user-defined value for this variable
    type: string
  description:
    description: A free text natural language description of the variable and its
      purpose.
    element_property: true
    pattern: '[ \r\n\t\S]+'
    title: Natural language description of the variable
    type: string
  expression:
    description: The FHIRPath expression for a specific value to evaluate against
      the fixture body. When variables are defined, only one of either expression,
      headerField or path must be specified.
    element_property: true
    pattern: '[ \r\n\t\S]+'
    title: The FHIRPath expression against the fixture body
    type: string
  extension:
    description: May be used to represent additional information that is not part
      of the basic definition of the element. To make the use of extensions safe and
      managable, there is a strict set of governance applied to the definition and
      use of extensions. Though any implementer can define an extension, there is
      a set of requirements that SHALL be met as part of the definition of the extension.
    element_property: true
    items:
      $ref: Extension.yaml
    title: Additional content defined by implementations
    type: array
  fhir_comments:
    anyOf:
    - type: string
    - items:
        type: string
      type: array
    element_property: false
    title: Fhir Comments
  headerField:
    description: Will be used to grab the HTTP header field value from the headers
      that sourceId is pointing to.
    element_property: true
    pattern: '[ \r\n\t\S]+'
    title: HTTP header field name for source
    type: string
  hint:
    description: Displayable text string with hint help information to the user when
      entering a default value.
    element_property: true
    pattern: '[ \r\n\t\S]+'
    title: Hint help text for default value to enter
    type: string
  id:
    description: Unique id for the element within a resource (for internal references).
      This may be any string value that does not contain spaces.
    element_property: true
    pattern: '[ \r\n\t\S]+'
    title: Unique id for inter-element referencing
    type: string
  links:
    links:
      items:
        $ref: https://json-schema.org/draft/2020-12/links.yaml
      type: array
  modifierExtension:
    description: May be used to represent additional information that is not part
      of the basic definition of the element and that modifies the understanding of
      the element in which it is contained and/or the understanding of the containing
      element's descendants. Usually modifier elements provide negation or qualification.
      To make the use of extensions safe and managable, there is a strict set of governance
      applied to the definition and use of extensions. Though any implementer can
      define an extension, there is a set of requirements that SHALL be met as part
      of the definition of the extension. Applications processing a resource are required
      to check for modifier extensions.  Modifier extensions SHALL NOT change the
      meaning of any elements on Resource or DomainResource (including cannot change
      the meaning of modifierExtension itself).
    element_property: true
    items:
      $ref: Extension.yaml
    title: Extensions that cannot be ignored even if unrecognized
    type: array
  name:
    element_property: true
    element_required: true
    pattern: '[ \r\n\t\S]+'
    title: Descriptive name for this variable
    type: string
  path:
    description: XPath or JSONPath to evaluate against the fixture body.  When variables
      are defined, only one of either expression, headerField or path must be specified.
    element_property: true
    pattern: '[ \r\n\t\S]+'
    title: XPath or JSONPath against the fixture body
    type: string
  resourceType:
    const: TestScriptVariable
    default: TestScriptVariable
    description: One of the resource types defined as part of FHIR
    title: Resource Type
    type: string
  sourceId:
    description: Fixture to evaluate the XPath/JSONPath expression or the headerField  against
      within this variable.
    element_property: true
    maxLength: 64
    minLength: 1
    pattern: ^[A-Za-z0-9\-.]+$
    title: Fixture Id of source expression or headerField within this variable
    type: string
title: TestScriptVariable
type: object

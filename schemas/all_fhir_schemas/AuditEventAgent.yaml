$id: AuditEventAgent
additionalProperties: false
description: Actor involved in the event. An actor taking an active role in the event
  or activity that is logged. [See https://hl7.org/fhir/R5/AuditEventAgent.html] [See
  https://hl7.org/fhir/R5/AuditEventAgent.html]
links:
- href: Location/{id}
  rel: location
  targetHints:
    backref:
    - audit_event_agent
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Location.yaml
  templatePointers:
    id: /location/reference
  templateRequired:
  - id
- href: Endpoint/{id}
  rel: networkReference
  targetHints:
    backref:
    - audit_event_agent
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Endpoint.yaml
  templatePointers:
    id: /networkReference/reference
  templateRequired:
  - id
- href: Practitioner/{id}
  rel: who_Practitioner
  targetHints:
    backref:
    - audit_event_agent
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Practitioner.yaml
  templatePointers:
    id: /who/reference
  templateRequired:
  - id
- href: PractitionerRole/{id}
  rel: who_PractitionerRole
  targetHints:
    backref:
    - audit_event_agent
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: PractitionerRole.yaml
  templatePointers:
    id: /who/reference
  templateRequired:
  - id
- href: Organization/{id}
  rel: who_Organization
  targetHints:
    backref:
    - audit_event_agent
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Organization.yaml
  templatePointers:
    id: /who/reference
  templateRequired:
  - id
- href: CareTeam/{id}
  rel: who_CareTeam
  targetHints:
    backref:
    - audit_event_agent
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: CareTeam.yaml
  templatePointers:
    id: /who/reference
  templateRequired:
  - id
- href: Patient/{id}
  rel: who_Patient
  targetHints:
    backref:
    - audit_event_agent
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Patient.yaml
  templatePointers:
    id: /who/reference
  templateRequired:
  - id
- href: Device/{id}
  rel: who_Device
  targetHints:
    backref:
    - audit_event_agent
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Device.yaml
  templatePointers:
    id: /who/reference
  templateRequired:
  - id
- href: RelatedPerson/{id}
  rel: who_RelatedPerson
  targetHints:
    backref:
    - audit_event_agent
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: RelatedPerson.yaml
  templatePointers:
    id: /who/reference
  templateRequired:
  - id
properties:
  _networkString:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``networkString``.
  _networkUri:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``networkUri``.
  _policy:
    items:
      $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``policy``.
    type: array
  _requestor:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``requestor``.
  authorization:
    binding_description: The reason the activity took place.
    binding_strength: example
    binding_uri: http://terminology.hl7.org/ValueSet/v3-PurposeOfUse
    binding_version: null
    description: The authorization (e.g., PurposeOfUse) that was used during the event
      being recorded.
    element_property: true
    items:
      $ref: CodeableConcept.yaml
    title: Allowable authorization for this agent
    type: array
  extension:
    description: May be used to represent additional information that is not part
      of the basic definition of the element. To make the use of extensions safe and
      managable, there is a strict set of governance applied to the definition and
      use of extensions. Though any implementer can define an extension, there is
      a set of requirements that SHALL be met as part of the definition of the extension.
    element_property: true
    items:
      $ref: Extension.yaml
    title: Additional content defined by implementations
    type: array
  fhir_comments:
    anyOf:
    - type: string
    - items:
        type: string
      type: array
    element_property: false
    title: Fhir Comments
  id:
    description: Unique id for the element within a resource (for internal references).
      This may be any string value that does not contain spaces.
    element_property: true
    pattern: '[ \r\n\t\S]+'
    title: Unique id for inter-element referencing
    type: string
  links:
    links:
      items:
        $ref: https://json-schema.org/draft/2020-12/links.yaml
      type: array
  location:
    $ref: Reference.yaml
    backref: audit_event_agent
    description: Where the agent location is known, the agent location when the event
      occurred.
    element_property: true
    enum_reference_types:
    - Location
    title: The agent location when the event occurred
  modifierExtension:
    description: May be used to represent additional information that is not part
      of the basic definition of the element and that modifies the understanding of
      the element in which it is contained and/or the understanding of the containing
      element's descendants. Usually modifier elements provide negation or qualification.
      To make the use of extensions safe and managable, there is a strict set of governance
      applied to the definition and use of extensions. Though any implementer can
      define an extension, there is a set of requirements that SHALL be met as part
      of the definition of the extension. Applications processing a resource are required
      to check for modifier extensions.  Modifier extensions SHALL NOT change the
      meaning of any elements on Resource or DomainResource (including cannot change
      the meaning of modifierExtension itself).
    element_property: true
    items:
      $ref: Extension.yaml
    title: Extensions that cannot be ignored even if unrecognized
    type: array
  networkReference:
    $ref: Reference.yaml
    backref: audit_event_agent
    description: When the event utilizes a network there should be an agent describing
      the local system, and an agent describing remote system, with the network interface
      details.
    element_property: true
    enum_reference_types:
    - Endpoint
    one_of_many: network
    one_of_many_required: false
    title: This agent network location for the activity
  networkString:
    description: When the event utilizes a network there should be an agent describing
      the local system, and an agent describing remote system, with the network interface
      details.
    element_property: true
    one_of_many: network
    one_of_many_required: false
    pattern: '[ \r\n\t\S]+'
    title: This agent network location for the activity
    type: string
  networkUri:
    description: When the event utilizes a network there should be an agent describing
      the local system, and an agent describing remote system, with the network interface
      details.
    element_property: true
    one_of_many: network
    one_of_many_required: false
    pattern: \S*
    title: This agent network location for the activity
    type: string
  policy:
    description: Where the policy(ies) are known that authorized the agent participation
      in the event. Typically, a single activity may have multiple applicable policies,
      such as patient consent, guarantor funding, etc. The policy would also indicate
      the security token used.
    element_property: true
    items:
      pattern: \S*
      type: string
    title: Policy that authorized the agent participation in the event
    type: array
  requestor:
    description: Indicator that the user is or is not the requestor, or initiator,
      for the event being audited.
    element_property: true
    title: Whether user is initiator
    type: boolean
  resourceType:
    const: AuditEventAgent
    default: AuditEventAgent
    description: One of the resource types defined as part of FHIR
    title: Resource Type
    type: string
  role:
    binding_description: What security role enabled the agent to participate in the
      event.
    binding_strength: example
    binding_uri: http://hl7.org/fhir/ValueSet/security-role-type
    binding_version: null
    description: The structural roles of the agent indicating the agent's competency.
      The security role enabling the agent with respect to the activity.
    element_property: true
    items:
      $ref: CodeableConcept.yaml
    title: Agent role in the event
    type: array
  type:
    $ref: CodeableConcept.yaml
    binding_description: The Participation type of the agent to the event.
    binding_strength: preferred
    binding_uri: http://hl7.org/fhir/ValueSet/participation-role-type
    binding_version: null
    description: The Functional Role of the user when performing the event.
    element_property: true
    title: How agent participated
  who:
    $ref: Reference.yaml
    backref: audit_event_agent
    description: Reference to who this agent is that was involved in the event.
    element_property: true
    enum_reference_types:
    - Practitioner
    - PractitionerRole
    - Organization
    - CareTeam
    - Patient
    - Device
    - RelatedPerson
    title: Identifier of who
required:
- who
title: AuditEventAgent
type: object

$id: TerminologyCapabilitiesCodeSystemVersion
additionalProperties: false
description: Version of Code System supported. For the code system, a list of versions
  that are supported by the server. [See https://hl7.org/fhir/R5/TerminologyCapabilitiesCodeSystemVersion.html]
  [See https://hl7.org/fhir/R5/TerminologyCapabilitiesCodeSystemVersion.html]
links: []
properties:
  _code:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``code``.
  _compositional:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``compositional``.
  _isDefault:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``isDefault``.
  _language:
    items:
      $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``language``.
    type: array
  _property:
    items:
      $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``property``.
    type: array
  code:
    description: For version-less code systems, there should be a single version with
      no identifier.
    element_property: true
    pattern: '[ \r\n\t\S]+'
    title: Version identifier for this version
    type: string
  compositional:
    description: If the compositional grammar defined by the code system is supported.
    element_property: true
    title: If compositional grammar is supported
    type: boolean
  extension:
    description: May be used to represent additional information that is not part
      of the basic definition of the element. To make the use of extensions safe and
      managable, there is a strict set of governance applied to the definition and
      use of extensions. Though any implementer can define an extension, there is
      a set of requirements that SHALL be met as part of the definition of the extension.
    element_property: true
    items:
      $ref: Extension.yaml
    title: Additional content defined by implementations
    type: array
  fhir_comments:
    anyOf:
    - type: string
    - items:
        type: string
      type: array
    element_property: false
    title: Fhir Comments
  filter:
    element_property: true
    items:
      $ref: TerminologyCapabilitiesCodeSystemVersionFilter.yaml
    title: Filter Properties supported
    type: array
  id:
    description: Unique id for the element within a resource (for internal references).
      This may be any string value that does not contain spaces.
    element_property: true
    pattern: '[ \r\n\t\S]+'
    title: Unique id for inter-element referencing
    type: string
  isDefault:
    element_property: true
    title: If this is the default version for this code system
    type: boolean
  language:
    binding_description: IETF language tag
    binding_strength: required
    binding_uri: http://hl7.org/fhir/ValueSet/languages
    binding_version: 5.0.0
    element_property: true
    items:
      pattern: ^[^\s]+(\s[^\s]+)*$
      type: string
    title: Language Displays supported
    type: array
  links:
    links:
      items:
        $ref: https://json-schema.org/draft/2020-12/links.yaml
      type: array
  modifierExtension:
    description: May be used to represent additional information that is not part
      of the basic definition of the element and that modifies the understanding of
      the element in which it is contained and/or the understanding of the containing
      element's descendants. Usually modifier elements provide negation or qualification.
      To make the use of extensions safe and managable, there is a strict set of governance
      applied to the definition and use of extensions. Though any implementer can
      define an extension, there is a set of requirements that SHALL be met as part
      of the definition of the extension. Applications processing a resource are required
      to check for modifier extensions.  Modifier extensions SHALL NOT change the
      meaning of any elements on Resource or DomainResource (including cannot change
      the meaning of modifierExtension itself).
    element_property: true
    items:
      $ref: Extension.yaml
    title: Extensions that cannot be ignored even if unrecognized
    type: array
  property:
    element_property: true
    items:
      pattern: ^[^\s]+(\s[^\s]+)*$
      type: string
    title: Properties supported for $lookup
    type: array
  resourceType:
    const: TerminologyCapabilitiesCodeSystemVersion
    default: TerminologyCapabilitiesCodeSystemVersion
    description: One of the resource types defined as part of FHIR
    title: Resource Type
    type: string
title: TerminologyCapabilitiesCodeSystemVersion
type: object

$id: ConceptMapAdditionalAttribute
additionalProperties: false
description: Definition of an additional attribute to act as a data source or target.
  An additionalAttribute defines an additional data element found in the source or
  target data model where the data will come from or be mapped to. Some mappings are
  based on data in addition to the source data element, where codes in multiple fields
  are combined to a single field (or vice versa). [See https://hl7.org/fhir/R5/ConceptMapAdditionalAttribute.html]
links: []
properties:
  _code:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``code``.
  _description:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``description``.
  _type:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``type``.
  _uri:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``uri``.
  code:
    description: A code that is used to identify this additional data attribute. The
      code is used internally in ConceptMap.group.element.target.dependsOn.attribute
      and ConceptMap.group.element.target.product.attribute.
    element_property: true
    element_required: true
    pattern: ^[^\s]+(\s[^\s]+)*$
    title: Identifies this additional attribute through this resource
    type: string
  description:
    description: A description of the additional attribute and/or the data element
      it refers to - why it is defined, and how the value might be used in mappings,
      and a discussion of issues associated with the use of the data element.
    element_property: true
    pattern: '[ \r\n\t\S]+'
    title: Why the additional attribute is defined, and/or what the data element it
      refers to is
    type: string
  extension:
    description: May be used to represent additional information that is not part
      of the basic definition of the element. To make the use of extensions safe and
      managable, there is a strict set of governance applied to the definition and
      use of extensions. Though any implementer can define an extension, there is
      a set of requirements that SHALL be met as part of the definition of the extension.
    element_property: true
    items:
      $ref: Extension.yaml
    title: Additional content defined by implementations
    type: array
  fhir_comments:
    anyOf:
    - type: string
    - items:
        type: string
      type: array
    element_property: false
    title: Fhir Comments
  id:
    description: Unique id for the element within a resource (for internal references).
      This may be any string value that does not contain spaces.
    element_property: true
    pattern: '[ \r\n\t\S]+'
    title: Unique id for inter-element referencing
    type: string
  links:
    links:
      items:
        $ref: https://json-schema.org/draft/2020-12/links.yaml
      type: array
  modifierExtension:
    description: May be used to represent additional information that is not part
      of the basic definition of the element and that modifies the understanding of
      the element in which it is contained and/or the understanding of the containing
      element's descendants. Usually modifier elements provide negation or qualification.
      To make the use of extensions safe and managable, there is a strict set of governance
      applied to the definition and use of extensions. Though any implementer can
      define an extension, there is a set of requirements that SHALL be met as part
      of the definition of the extension. Applications processing a resource are required
      to check for modifier extensions.  Modifier extensions SHALL NOT change the
      meaning of any elements on Resource or DomainResource (including cannot change
      the meaning of modifierExtension itself).
    element_property: true
    items:
      $ref: Extension.yaml
    title: Extensions that cannot be ignored even if unrecognized
    type: array
  resourceType:
    const: ConceptMapAdditionalAttribute
    default: ConceptMapAdditionalAttribute
    description: One of the resource types defined as part of FHIR
    title: Resource Type
    type: string
  type:
    binding_description: The type of a mapping attribute value.
    binding_strength: required
    binding_uri: http://hl7.org/fhir/ValueSet/conceptmap-attribute-type
    binding_version: 5.0.0
    description: The type of the source data contained in this concept map for this
      data element.
    element_property: true
    element_required: true
    enum_values:
    - code
    - Coding
    - string
    - boolean
    - Quantity
    pattern: ^[^\s]+(\s[^\s]+)*$
    title: code | Coding | string | boolean | Quantity
    type: string
  uri:
    description: Reference to the formal definition of the source/target data element.
      For elements defined by the FHIR specification, or using a FHIR logical model,
      the correct format is {canonical-url}#{element-id}.
    element_property: true
    pattern: \S*
    title: Formal identifier for the data element referred to in this attribte
    type: string
title: ConceptMapAdditionalAttribute
type: object

$id: ProvenanceEntity
additionalProperties: false
description: An entity used in this activity. [See https://hl7.org/fhir/R5/ProvenanceEntity.html]
  [See https://hl7.org/fhir/R5/ProvenanceEntity.html]
links:
- href: Resource/{id}
  rel: what
  targetHints:
    backref:
    - provenance_entity
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Resource.yaml
  templatePointers:
    id: /what/reference
  templateRequired:
  - id
- href: Practitioner/{id}
  rel: agent_onBehalfOf_Practitioner
  targetHints:
    backref:
    - onBehalfOf_provenance_agent
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Practitioner.yaml
  templatePointers:
    id: /agent/-/onBehalfOf/reference
  templateRequired:
  - id
- href: PractitionerRole/{id}
  rel: agent_onBehalfOf_PractitionerRole
  targetHints:
    backref:
    - onBehalfOf_provenance_agent
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: PractitionerRole.yaml
  templatePointers:
    id: /agent/-/onBehalfOf/reference
  templateRequired:
  - id
- href: Organization/{id}
  rel: agent_onBehalfOf_Organization
  targetHints:
    backref:
    - onBehalfOf_provenance_agent
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Organization.yaml
  templatePointers:
    id: /agent/-/onBehalfOf/reference
  templateRequired:
  - id
- href: CareTeam/{id}
  rel: agent_onBehalfOf_CareTeam
  targetHints:
    backref:
    - onBehalfOf_provenance_agent
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: CareTeam.yaml
  templatePointers:
    id: /agent/-/onBehalfOf/reference
  templateRequired:
  - id
- href: Patient/{id}
  rel: agent_onBehalfOf_Patient
  targetHints:
    backref:
    - onBehalfOf_provenance_agent
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Patient.yaml
  templatePointers:
    id: /agent/-/onBehalfOf/reference
  templateRequired:
  - id
- href: Practitioner/{id}
  rel: agent_who_Practitioner
  targetHints:
    backref:
    - who_provenance_agent
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Practitioner.yaml
  templatePointers:
    id: /agent/-/who/reference
  templateRequired:
  - id
- href: PractitionerRole/{id}
  rel: agent_who_PractitionerRole
  targetHints:
    backref:
    - who_provenance_agent
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: PractitionerRole.yaml
  templatePointers:
    id: /agent/-/who/reference
  templateRequired:
  - id
- href: Organization/{id}
  rel: agent_who_Organization
  targetHints:
    backref:
    - who_provenance_agent
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Organization.yaml
  templatePointers:
    id: /agent/-/who/reference
  templateRequired:
  - id
- href: CareTeam/{id}
  rel: agent_who_CareTeam
  targetHints:
    backref:
    - who_provenance_agent
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: CareTeam.yaml
  templatePointers:
    id: /agent/-/who/reference
  templateRequired:
  - id
- href: Patient/{id}
  rel: agent_who_Patient
  targetHints:
    backref:
    - who_provenance_agent
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Patient.yaml
  templatePointers:
    id: /agent/-/who/reference
  templateRequired:
  - id
- href: Device/{id}
  rel: agent_who_Device
  targetHints:
    backref:
    - who_provenance_agent
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Device.yaml
  templatePointers:
    id: /agent/-/who/reference
  templateRequired:
  - id
- href: RelatedPerson/{id}
  rel: agent_who_RelatedPerson
  targetHints:
    backref:
    - who_provenance_agent
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: RelatedPerson.yaml
  templatePointers:
    id: /agent/-/who/reference
  templateRequired:
  - id
properties:
  _role:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``role``.
  agent:
    description: The entity is attributed to an agent to express the agent's responsibility
      for that entity, possibly along with other agents. This description can be understood
      as shorthand for saying that the agent was responsible for the activity which
      used the entity.
    element_property: true
    items:
      $ref: ProvenanceAgent.yaml
    title: Entity is attributed to this agent
    type: array
  extension:
    description: May be used to represent additional information that is not part
      of the basic definition of the element. To make the use of extensions safe and
      managable, there is a strict set of governance applied to the definition and
      use of extensions. Though any implementer can define an extension, there is
      a set of requirements that SHALL be met as part of the definition of the extension.
    element_property: true
    items:
      $ref: Extension.yaml
    title: Additional content defined by implementations
    type: array
  fhir_comments:
    anyOf:
    - type: string
    - items:
        type: string
      type: array
    element_property: false
    title: Fhir Comments
  id:
    description: Unique id for the element within a resource (for internal references).
      This may be any string value that does not contain spaces.
    element_property: true
    pattern: '[ \r\n\t\S]+'
    title: Unique id for inter-element referencing
    type: string
  links:
    links:
      items:
        $ref: https://json-schema.org/draft/2020-12/links.yaml
      type: array
  modifierExtension:
    description: May be used to represent additional information that is not part
      of the basic definition of the element and that modifies the understanding of
      the element in which it is contained and/or the understanding of the containing
      element's descendants. Usually modifier elements provide negation or qualification.
      To make the use of extensions safe and managable, there is a strict set of governance
      applied to the definition and use of extensions. Though any implementer can
      define an extension, there is a set of requirements that SHALL be met as part
      of the definition of the extension. Applications processing a resource are required
      to check for modifier extensions.  Modifier extensions SHALL NOT change the
      meaning of any elements on Resource or DomainResource (including cannot change
      the meaning of modifierExtension itself).
    element_property: true
    items:
      $ref: Extension.yaml
    title: Extensions that cannot be ignored even if unrecognized
    type: array
  resourceType:
    const: ProvenanceEntity
    default: ProvenanceEntity
    description: One of the resource types defined as part of FHIR
    title: Resource Type
    type: string
  role:
    binding_description: How an entity was used in an activity.
    binding_strength: required
    binding_uri: http://hl7.org/fhir/ValueSet/provenance-entity-role
    binding_version: 5.0.0
    description: How the entity was used during the activity.
    element_property: true
    element_required: true
    enum_values:
    - revision
    - quotation
    - source
    - instantiates
    - removal
    pattern: ^[^\s]+(\s[^\s]+)*$
    title: revision | quotation | source | instantiates | removal
    type: string
  what:
    $ref: Reference.yaml
    backref: provenance_entity
    description: Identity of the  Entity used. May be a logical or physical uri and
      maybe absolute or relative.
    element_property: true
    enum_reference_types:
    - Resource
    title: Identity of entity
required:
- what
title: ProvenanceEntity
type: object
